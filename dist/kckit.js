/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/kckit.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/.helpers/ArrayOrItem.js":
/*!*************************************!*\
  !*** ./src/.helpers/ArrayOrItem.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (arg, func) {\n    if (Array.isArray(arg)) return arg.some(func);\n    return func(arg);\n};\n\n//# sourceURL=webpack:///./src/.helpers/ArrayOrItem.js?");

/***/ }),

/***/ "./src/.helpers/ArrayOrItemAll.js":
/*!****************************************!*\
  !*** ./src/.helpers/ArrayOrItemAll.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (arg, func) {\n    if (Array.isArray(arg)) return arg.every(func);\n    return func(arg);\n};\n\n//# sourceURL=webpack:///./src/.helpers/ArrayOrItemAll.js?");

/***/ }),

/***/ "./src/.helpers/index.js":
/*!*******************************!*\
  !*** ./src/.helpers/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar ArrayOrItem = __webpack_require__(/*! ./ArrayOrItem */ \"./src/.helpers/ArrayOrItem.js\");\nvar ArrayOrItemAll = __webpack_require__(/*! ./ArrayOrItemAll */ \"./src/.helpers/ArrayOrItemAll.js\");\n\nmodule.exports = {\n    ArrayOrItem: ArrayOrItem,\n    ArrayOrItemAll: ArrayOrItemAll\n};\n\n//# sourceURL=webpack:///./src/.helpers/index.js?");

/***/ }),

/***/ "./src/calculate/bonus.js":
/*!********************************!*\
  !*** ./src/calculate/bonus.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar getShipAndEquipments = __webpack_require__(/*! ../get/ship-and-equipments */ \"./src/get/ship-and-equipments.js\");\nvar checkShip = __webpack_require__(/*! ../check/ship */ \"./src/check/ship.js\");\nvar checkEquipments = __webpack_require__(/*! ../check/equipments */ \"./src/check/equipments.js\");\nvar bonus = __webpack_require__(/*! ../data/bonus */ \"./src/data/bonus.js\");\n\n/**\r\n * Calculate stat bonus for specified ship with equipment(s)\r\n */\nvar calculateBonus = function calculateBonus(ship) {\n    var equipments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var equipmentStars = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var equipmentRanks = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    var stat = arguments[4];\n\n    if (typeof equipmentStars === 'string') return calculateBonus(ship, equipments, undefined, undefined, equipmentStars);\n    if (typeof equipmentRanks === 'string') return calculateBonus(ship, equipments, equipmentStars, undefined, equipmentRanks);\n\n    var _getShipAndEquipments = getShipAndEquipments(ship, equipments, equipmentStars, equipmentRanks);\n\n    ship = _getShipAndEquipments.ship;\n    equipments = _getShipAndEquipments.equipments;\n    equipmentStars = _getShipAndEquipments.equipmentStars;\n    equipmentRanks = _getShipAndEquipments.equipmentRanks;\n\n\n    var result = {};\n    var conditions = bonus.filter(function (bonus) {\n        return checkShip(ship, bonus.ship);\n    });\n    var addResult = function addResult() {\n        var bonus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        for (var _stat in bonus) {\n            if (typeof result[_stat] === 'undefined') result[_stat] = bonus[_stat];else result[_stat] += bonus[_stat];\n        }\n    };\n\n    // 条件：单一装备\n    conditions.filter(function (bonus) {\n        return typeof bonus.equipment === 'number' && equipments.some(function (equipment) {\n            return equipment && equipment.id && equipment.id == bonus.equipment;\n        });\n    }).forEach(function (bonus) {\n        var thisBonus = {};\n\n        // 根据改修星级\n        // 目前的数据结构下，改修星级条件与其他条件不能共存\n        // TODO: 改修星级条件与数量条件可并存\n        if (_typeof(bonus.bonusImprove) === 'object') {\n            // 从大到小排序可能的改修星级\n            var starsDesc = Object.keys(bonus.bonusImprove).sort(function (a, b) {\n                return parseInt(b) - parseInt(a);\n            });\n            // 每个装备的收益单独计算\n            equipments.forEach(function (equipment, index) {\n                if (equipment && equipment.id && equipment.id == bonus.equipment) {\n                    starsDesc.some(function (star) {\n                        if (equipmentStars[index] >= star) {\n                            for (var _stat2 in bonus.bonusImprove[star]) {\n                                if (typeof thisBonus[_stat2] === 'undefined') thisBonus[_stat2] = bonus.bonusImprove[star][_stat2];else thisBonus[_stat2] += bonus.bonusImprove[star][_stat2];\n                            }\n                            return !0;\n                        }\n                        return !1;\n                    });\n                }\n            });\n        } else {\n            var thisCount = 0;\n\n            // 统计目标装备的数量\n            equipments.forEach(function (equipment) {\n                if (equipment && equipment.id && equipment.id == bonus.equipment) {\n                    thisCount++;\n                }\n            });\n\n            if (_typeof(bonus.bonusCount) === 'object') {\n                Object.keys(bonus.bonusCount).sort(function (a, b) {\n                    return parseInt(b) - parseInt(a);\n                }).some(function (count) {\n                    if (thisCount >= count) {\n                        thisBonus = _extends({}, bonus.bonusCount[count]);\n                        return !0;\n                    }\n                    return !1;\n                });\n            } else if (_typeof(bonus.bonus) === 'object') {\n                thisBonus = _extends({}, bonus.bonus);\n                // add for count\n                for (var _stat3 in thisBonus) {\n                    thisBonus[_stat3] = thisBonus[_stat3] * thisCount;\n                }\n            }\n        }\n\n        addResult(thisBonus);\n    });\n\n    // 条件：套装\n    conditions.filter(function (bonus) {\n        return _typeof(bonus.equipments) === 'object' && checkEquipments(equipments, equipmentStars, equipmentRanks, bonus.equipments);\n    }).forEach(function (bonus) {\n        addResult(bonus.bonus);\n    });\n\n    if (typeof stat === 'string') return result[stat] || 0;\n\n    return result;\n};\n\nmodule.exports = calculateBonus;\n\n//# sourceURL=webpack:///./src/calculate/bonus.js?");

/***/ }),

/***/ "./src/check/equipment.js":
/*!********************************!*\
  !*** ./src/check/equipment.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar getEquipment = __webpack_require__(/*! ../get/equipment */ \"./src/get/equipment.js\");\nvar equipmentTypes = __webpack_require__(/*! ../types/equipments */ \"./src/types/equipments.js\");\n\nvar _require = __webpack_require__(/*! ../.helpers */ \"./src/.helpers/index.js\"),\n    ArrayOrItem = _require.ArrayOrItem,\n    ArrayOrItemAll = _require.ArrayOrItemAll;\n\n/**\r\n * 检查装备是否满足给定条件\r\n * \r\n * @param {(number|Equipment)} equipment 要判断的装备\r\n * @param {Number} [star=0] 改修星级\r\n * @param {Number} [rank=0] 熟练度级别\r\n * @param {any} [conditions={}] 条件，需满足所有条件\r\n * @param {(number|number[])} [conditions.isID] 判断装备ID是否精确匹配或匹配其中一项\r\n * @param {(number|number[])} [conditions.isNotID] 判断装备ID是否不匹配\r\n * @param {(string|string[])} [conditions.isName] 判断装备名是否精确匹配或匹配其中一项\r\n * @param {(string|string[])} [conditions.isNotName] 判断装备名是否不匹配\r\n * @param {(string|string[])} [conditions.isNameOf] 判断装备名片段是否匹配或匹配其中一项\r\n * @param {(string|string[])} [conditions.isNotNameOf] 判断装备名片段是否不匹配\r\n * @param {(number|number[])} [conditions.isType] 判断装备是否属于给定舰种或匹配其中一项\r\n * @param {(number|number[])} [conditions.isNotType] 判断装备是否不属于给定舰种\r\n */\n\n\nvar check = function check(equipment) {\n    var star = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var rank = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var conditions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    if ((typeof star === 'undefined' ? 'undefined' : _typeof(star)) === 'object') return check(equipment, 0, 0, star);\n\n    if ((typeof rank === 'undefined' ? 'undefined' : _typeof(rank)) === 'object') return check(equipment, star, 0, rank);\n\n    equipment = getEquipment(equipment);\n    if (typeof equipment === 'undefined') return !1;\n\n    // 需满足所有条件\n    for (var key in conditions) {\n        if (typeof conditions[key] === 'undefined') continue;\n\n        var keyLowerCase = key.toLowerCase();\n\n        if (['improve', 'improvement', 'star'].includes(keyLowerCase)) {\n            return (parseInt(star || 0) || 0) >= parseInt(conditions[key]);\n        }\n\n        if (checkCondition[keyLowerCase]) {\n            // checkCondition 中存在该条件，直接运行\n            if (!checkCondition[keyLowerCase](equipment, conditions[key])) return !1;\n        } else if (key.substr(0, 2) === 'is') {\n            // 以 is 为开头，通常为检查装备类型\n            var typeName = key.substr(2);\n            if (typeName === 'HAMountAAFD') {\n                typeName = 'HAMountsAAFD';\n            } else if (typeName + 's' in equipmentTypes) {\n                typeName = typeName + 's';\n            } else if (typeName in equipmentTypes) {\n                // typeName = typeName\n            } else {\n                return !1;\n            }\n            // console.log(typeName)\n            // 条件是否为Object\n            var isConditionObj = _typeof(conditions[key]) === 'object' && !Array.isArray(conditions[key]);\n            var objConditions = conditions[key] && isConditionObj ? conditions[key] : undefined;\n            if (!checkCondition[conditions[key] === !0 || isConditionObj ? 'istype' : 'isnottype'](equipment, equipmentTypes[typeName], objConditions)) return !1;\n        }\n    }\n\n    return !0;\n};\n\nvar checkCondition = {\n    /**\r\n     * 是特定ID\r\n     */\n    isid: function isid(equipment, id) {\n        return ArrayOrItem(id, function (id) {\n            if (isNaN(id)) return !1;\n            return parseInt(id) === equipment.id;\n        });\n    },\n    /**\r\n     * 不是特定ID\r\n     */\n    isnotid: function isnotid(equipment, id) {\n        return ArrayOrItemAll(id, function (id) {\n            if (isNaN(id)) return !1;\n            return parseInt(id) !== equipment.id;\n        });\n    },\n\n    /**\r\n     * 完全匹配特定名称\r\n     */\n    isname: function isname(equipment, name) {\n        return ArrayOrItem(name, function (name) {\n            return equipment.isName(name)\n            // for (let key in equipment.name) {\n            //     if (key === 'suffix') continue\n            //     if (equipment.name[key] === name) return true\n            // }\n            // return false\n            ;\n        });\n    },\n    /**\r\n     * 不是特定名称\r\n     */\n    isnotname: function isnotname(equipment, name) {\n        return ArrayOrItemAll(name, function (name) {\n            return !equipment.isName(name)\n            // for (let key in equipment.name) {\n            //     if (key === 'suffix') continue\n            //     if (equipment.name[key] === name) return false\n            // }\n            // return true\n            ;\n        });\n    },\n\n    /**\r\n     * 名称里包含特定字段\r\n     */\n    isnameof: function isnameof(equipment, name) {\n        return ArrayOrItem(name, function (name) {\n            return equipment.hasName(name)\n            // for (let key in equipment.name) {\n            //     if (key === 'suffix') continue\n            //     if (equipment.name[key].includes(name)) return true\n            // }\n            // return false\n            ;\n        });\n    },\n    /**\r\n     * 名称里不包含特定字段\r\n     */\n    isnotnameof: function isnotnameof(equipment, name) {\n        return ArrayOrItemAll(name, function (name) {\n            return !equipment.hasName(name)\n            // for (let key in equipment.name) {\n            //     if (key === 'suffix') continue\n            //     if (equipment.name[key].includes(name)) return false\n            // }\n            // return true\n            ;\n        });\n    },\n\n    /**\r\n     * 是特定类型\r\n     * 如果判断条件为Object，也会进入该条件\r\n     */\n    istype: function istype(equipment, type, conditions) {\n        return ArrayOrItem(type, function (type) {\n            if (isNaN(type)) return !1;\n            if (parseInt(type) !== equipment.type) return !1;\n            // 条件是Object\n            if ((typeof conditions === 'undefined' ? 'undefined' : _typeof(conditions)) === 'object') {\n                // 包含属性\n                if (conditions.hasStat) {\n                    var pass = !0;\n                    for (var stat in conditions.hasStat) {\n                        if (Array.isArray(conditions.hasStat[stat])) {\n                            if (equipment.stat[stat] < conditions.hasStat[stat][0]) pass = !1;\n                            if (equipment.stat[stat] > conditions.hasStat[stat][1]) pass = !1;\n                        } else if (equipment.stat[stat] < conditions.hasStat[stat]) {\n                            pass = !1;\n                        }\n                    }\n                    if (!pass) return !1;\n                }\n            }\n            return !0;\n        });\n    },\n\n    /**\r\n     * 不是特定类型\r\n     */\n    isnottype: function isnottype(equipment, type) {\n        return ArrayOrItemAll(type, function (type) {\n            if (isNaN(type)) return !1;\n            return parseInt(type) !== equipment.type;\n        });\n    },\n\n    /**\r\n     * 是对空电探/雷达\r\n     */\n    isaaradar: function isaaradar(equipment, isTrue) {\n        // console.log(`[${equipment.id}]`, equipment._name)\n        return (this.istype(equipment, equipmentTypes.Radars) && !isNaN(equipment.stat.aa) && equipment.stat.aa >= 1) === isTrue;\n    },\n\n    /**\r\n     * 是对水面电探/雷达\r\n     */\n    issurfaceradar: function issurfaceradar(equipment, isTrue) {\n        // console.log(`[${equipment.id}]`, equipment._name)\n        return (this.istype(equipment, equipmentTypes.Radars)\n        // && (\n        //     (equipment.stat.fire || 0) > 0\n        //     || (equipment.stat.aa || 0) < 2\n        // )\n        && !isNaN(equipment.stat.hit) && equipment.stat.hit >= 3) === isTrue;\n    }\n};\n\nmodule.exports = check;\n\n//# sourceURL=webpack:///./src/check/equipment.js?");

/***/ }),

/***/ "./src/check/equipments.js":
/*!*********************************!*\
  !*** ./src/check/equipments.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }); } else { obj[key] = value; } return obj; }\n\n// const getEquipment = require('../get/equipment')\nvar checkEquipment = __webpack_require__(/*! ./equipment */ \"./src/check/equipment.js\");\n\nvar checkListStatic = ['id', 'name', 'nameof', 'type'];\n\n/**\r\n * 检查装备列表是否满足给定条件\r\n * \r\n * @param {(number[]|Equipment[])} equipments 要判断的装备列表\r\n * @param {Number[]} [stars=[]] 各装备的改修星级\r\n * @param {Number[]} [ranks=[]] 各装备的熟练度级别\r\n * @param {any} [conditions={}] 条件，需满足所有条件\r\n */\nvar check = function check(equipments, stars, ranks) {\n    var conditions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    if ((typeof stars === 'undefined' ? 'undefined' : _typeof(stars)) === 'object' && !Array.isArray(stars)) return check(equipments, [], [], stars);\n\n    if ((typeof ranks === 'undefined' ? 'undefined' : _typeof(ranks)) === 'object' && !Array.isArray(ranks)) return check(equipments, stars, [], ranks);\n\n    if (!Array.isArray(equipments)) return check([equipments], stars, ranks, conditions);\n\n    if (!Array.isArray(stars)) stars = [stars];\n    if (!Array.isArray(ranks)) ranks = [ranks];\n\n    // 需满足所有条件\n\n    // Array\n    if (Array.isArray(conditions)) {\n        return conditions.every(function (condition) {\n            return equipments.some(function (equipment, index) {\n                return checkEquipment(equipment, stars[index], ranks[index], condition);\n            });\n        });\n    }\n\n    // 其他情况\n\n    var _loop = function _loop(key) {\n        if (typeof conditions[key] === 'undefined') return 'continue';\n        if (conditions[key] === !1) {\n            // 条件：不存在\n            if (!equipments.every(function (equipment, index) {\n                return checkEquipment(equipment, stars[index], ranks[index], _defineProperty({}, key.replace(/^has/, 'is'), conditions[key]));\n            })) return {\n                    v: !1\n                };\n        } else if (conditions[key] === !0) {\n            // 条件：存在\n            if (!equipments.some(function (equipment, index) {\n                return checkEquipment(equipment, stars[index], ranks[index], _defineProperty({}, key.replace(/^has/, 'is'), conditions[key]));\n            })) return {\n                    v: !1\n                };\n        } else if (key.substr(0, 3) === 'has' && checkListStatic.includes(key.substr(3).toLowerCase())) {\n            // 条件：checkListStatic 中的项目\n            if (Array.isArray(conditions[key])) {\n                if (!conditions[key].every(function (value) {\n                    return equipments.some(function (equipment, index) {\n                        return checkEquipment(equipment, stars[index], ranks[index], _defineProperty({}, key.replace(/^has/, 'is'), value));\n                    });\n                })) return {\n                        v: !1\n                    };\n            } else {\n                if (!equipments.some(function (equipment, index) {\n                    return checkEquipment(equipment, stars[index], ranks[index], _defineProperty({}, key.replace(/^has/, 'is'), conditions[key]));\n                })) return {\n                        v: !1\n                    };\n            }\n        } else if (key.substr(0, 3) === 'has' && _typeof(conditions[key]) === 'object' && !Array.isArray(conditions[key])) {\n            // 条件合集\n            var thisCondition = Object.assign({}, conditions[key]);\n            var count = typeof thisCondition.count === 'undefined' ? 1 : thisCondition.count;\n            delete thisCondition.count;\n            var filtered = equipments.filter(function (equipment, index) {\n                return checkEquipment(equipment, stars[index], ranks[index], _defineProperty({}, key.replace(/^has/, 'is'), thisCondition));\n            });\n            // console.log(thisCondition, equipments, filtered.length, count)\n            if (filtered.length < count) return {\n                    v: !1\n                };\n        } else if (key.substr(0, 3) === 'has' && !isNaN(conditions[key])) {\n            // 条件：有至少 N 个\n            var _filtered = equipments.filter(function (equipment, index) {\n                return checkEquipment(equipment, stars[index], ranks[index], _defineProperty({}, key.replace(/^has/, 'is'), !0));\n            });\n            if (_filtered.length < conditions[key]) return {\n                    v: !1\n                };\n        } else if (key.substr(0, 3) === 'has' && Array.isArray(conditions[key])) {\n            // 条件：有至少 value[0] 个至多 value[1] 个\n            var _filtered2 = equipments.filter(function (equipment, index) {\n                return checkEquipment(equipment, stars[index], ranks[index], _defineProperty({}, key.replace(/^has/, 'is'), !0));\n            });\n            if (_filtered2.length < conditions[key][0] || _filtered2.length > conditions[key][1]) return {\n                    v: !1\n                };\n        }\n    };\n\n    for (var key in conditions) {\n        var _ret = _loop(key);\n\n        switch (_ret) {\n            case 'continue':\n                continue;\n\n            default:\n                if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n        }\n    }\n\n    return !0;\n};\nmodule.exports = check;\n\n//# sourceURL=webpack:///./src/check/equipments.js?");

/***/ }),

/***/ "./src/check/ship.js":
/*!***************************!*\
  !*** ./src/check/ship.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar getShip = __webpack_require__(/*! ../get/ship */ \"./src/get/ship.js\");\n\nvar _require = __webpack_require__(/*! ../.helpers */ \"./src/.helpers/index.js\"),\n    ArrayOrItem = _require.ArrayOrItem,\n    ArrayOrItemAll = _require.ArrayOrItemAll;\n\n/**\r\n * 检查舰娘是否满足给定条件\r\n * \r\n * @param {(number|Ship)} ship 要判断的舰娘\r\n * @param {any} [conditions={}] 条件，需满足所有条件\r\n * @param {(number|number[])} [conditions.isID] 判断舰娘ID是否精确匹配或匹配其中一项\r\n * @param {(number|number[])} [conditions.isNotID] 判断舰娘ID是否不匹配\r\n * @param {(string|string[])} [conditions.isName] 判断舰娘名是否精确匹配或匹配其中一项\r\n * @param {(string|string[])} [conditions.isNotName] 判断舰娘名是否不匹配\r\n * @param {(number|number[])} [conditions.isType] 判断舰娘是否属于给定舰种或匹配其中一项\r\n * @param {(number|number[])} [conditions.isNotType] 判断舰娘是否不属于给定舰种\r\n * @param {(number|number[])} [conditions.isClass] 判断舰娘是否属于给定舰级或匹配其中一项\r\n * @param {(number|number[])} [conditions.isNotClass] 判断舰娘是否不属于给定舰级\r\n * @param {boolean} [conditions.isBattleship]\r\n * @param {boolean} [conditions.isBB]\r\n * @param {boolean} [conditions.isCarrier]\r\n * @param {boolean} [conditions.isCV]\r\n * @param {boolean} [conditions.isSubmarine]\r\n * @param {boolean} [conditions.isSS]\r\n * @param {number|[min,max]} [conditions.hasSlot] 判断舰娘的可配置栏位精确有 number 个，或 min ~ max 个\r\n * @param {number} [conditions.hasSlotMin] 判断舰娘的可配置栏位至少有 number 个\r\n * @param {number} [conditions.hasSlotMax] 判断舰娘的可配置栏位最多有 number 个\r\n */\n\n\nmodule.exports = function (ship) {\n    var conditions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    ship = getShip(ship);\n    if (typeof ship === 'undefined') return !1;\n\n    // 需满足所有条件\n    for (var key in conditions) {\n        if (typeof conditions[key] === 'undefined') continue;\n        if (!checkCondition[key.toLowerCase()](ship, conditions[key])) return !1;\n    }\n\n    return !0;\n};\n\nvar checkCondition = {\n    // isID\n    isid: function isid(ship, id) {\n        return ArrayOrItem(id, function (id) {\n            if (isNaN(id)) return !1;\n            return parseInt(id) === ship.id;\n        });\n    },\n    isnotid: function isnotid(ship, id) {\n        return ArrayOrItemAll(id, function (id) {\n            if (isNaN(id)) return !1;\n            return parseInt(id) !== ship.id;\n        });\n    },\n\n    // isName\n    isname: function isname(ship, name) {\n        return ArrayOrItem(name, function (name) {\n            return ship.isName(name)\n            // for (let key in ship.name) {\n            //     if (key === 'suffix') continue\n            //     if (ship.name[key].toLowerCase() === name) return true\n            // }\n            // return false\n            ;\n        });\n    },\n    isnotname: function isnotname(ship, name) {\n        return ArrayOrItemAll(name, function (name) {\n            return !ship.isName(name)\n            // for (let key in ship.name) {\n            //     if (key === 'suffix') continue\n            //     if (ship.name[key].toLowerCase() === name) return false\n            // }\n            // return true\n            ;\n        });\n    },\n\n    // isType\n    istype: function istype(ship, type) {\n        return ArrayOrItem(type, function (type) {\n            if (isNaN(type)) return !1;\n            return parseInt(type) === ship.type;\n        });\n    },\n    isnottype: function isnottype(ship, type) {\n        return ArrayOrItemAll(type, function (type) {\n            if (isNaN(type)) return !1;\n            return parseInt(type) !== ship.type;\n        });\n    },\n    isbattleship: function isbattleship(ship, isTrue) {\n        return this.istype(ship, [8, 6, 20, 7, 18]) === isTrue;\n    },\n    isbb: function isbb(ship, isTrue) {\n        return this.isbattleship(ship, isTrue);\n    },\n    iscarrier: function iscarrier(ship, isTrue) {\n        return this.istype(ship, [11, 10, 9, 30, 32]) === isTrue;\n    },\n    iscv: function iscv(ship, isTrue) {\n        return this.iscarrier(ship, isTrue);\n    },\n    issubmarine: function issubmarine(ship, isTrue) {\n        return this.istype(ship, [14, 13]) === isTrue;\n    },\n    isss: function isss(ship, isTrue) {\n        return this.issubmarine(ship, isTrue);\n    },\n\n    // isClass\n    isclass: function isclass(ship, Class) {\n        return ArrayOrItem(Class, function (Class) {\n            if (isNaN(Class)) return !1;\n            return parseInt(Class) === ship.class;\n        });\n    },\n    isnotclass: function isnotclass(ship, Class) {\n        return ArrayOrItemAll(Class, function (Class) {\n            if (isNaN(Class)) return !1;\n            return parseInt(Class) !== ship.class;\n        });\n    },\n\n    // hasSlot\n    hasslot: function hasslot(ship, num) {\n        if (!Array.isArray(ship.slot)) return !1;\n        if (Array.isArray(num)) {\n            if (isNaN(num[0]) && !isNaN(num[1])) return ship.slot.length <= parseInt(num[1]);else if (!isNaN(num[0]) && isNaN(num[1])) return ship.slot.length >= parseInt(num[0]);else if (!isNaN(num[0]) && !isNaN(num[1])) return ship.slot.length >= parseInt(num[0]) && ship.slot.length <= parseInt(num[1]);else return !1;\n        } else return !isNaN(num) && parseInt(num) === ship.slot.length;\n    },\n    hasslotmin: function hasslotmin(ship, min) {\n        return this.hasslot(ship, [min, undefined]);\n    },\n    hasslotmax: function hasslotmax(ship, max) {\n        return this.hasslot(ship, [undefined, max]);\n    },\n\n    // minLevel\n    minlevel: function minlevel(ship, level) {\n        if (typeof ship.level !== 'undefined') return ship.level >= level;\n        return !0;\n    }\n};\n\n//# sourceURL=webpack:///./src/check/ship.js?");

/***/ }),

/***/ "./src/data/bonus.js":
/*!***************************!*\
  !*** ./src/data/bonus.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// 装备额外属性\n\nvar BB_KongouClass2ndRemodel = [149, // 金剛改二\n150, // 比叡改二\n151, // 榛名改二\n152];\nvar BB_IseClassRemodel = [82, // 伊勢改\n88];\nvar BB_IseClass2ndRemodel = [553];\nvar BB_IseClassRemodelAll = BB_IseClassRemodel.concat(BB_IseClass2ndRemodel);\nvar BB_FusouClass2ndRemodel = [411, // 扶桑改二\n412];\n\nvar CL_KumaClass2ndRemodel = [547, // 多摩改二\n146];\nvar CL_KumaClassRemodel = [216, // 多摩改\n217].concat(CL_KumaClass2ndRemodel);\nvar CL_NagaraClass2ndRemodel = [488];\n\nvar DD_FubukiClass2ndRemodel = [426, // 吹雪改二\n420];\nvar DD_AyanamiClass2ndRemodel = [195, // 綾波改二\n407];\nvar DD_AkatsukiClass2ndRemodel = [437, // 暁改二\n147];\nvar DD_HatsuharuClass2ndRemodel = [326, // 初春改二\n419];\nvar DD_ShiratsuyuClass2ndRemodel = [145, // 時雨改二\n498, // 村雨改二\n144, // 夕立改二\n469];\nvar DD_AsashioClass2ndRemodel = [463, // 朝潮改二\n468, // 朝潮改二丁\n199, // 大潮改二\n489, // 満潮改二\n490, // 荒潮改二\n198, // 霰改二\n464, // 霞改二\n470];\nvar DD_KagerouClass2ndRemodel = [566, // 陽炎改二\n567, // 不知火改二\n568];\nvar DD_YuugumoClass2ndRemodel = [543];\nvar DD_YuugumoClass2ndRemodel_PLUS_ShimakazeRemodel = DD_YuugumoClass2ndRemodel.concat([229]);\n\n/**\r\n * @member {Number} [equipment] 单一装备\r\n * @member {Object} [equipments] 条件：装备组合\r\n * @member {Object} ship 条件：匹配的舰娘\r\n * @member {Object} [bonus] 收益\r\n * @member {Object} [bonusCount] 仅当为单一装备时可用：不同装备数量的收益\r\n * @member {Object} [bonusImprove] 仅当为单一装备时可用：不同改修星级的收益\r\n * @member {Array} [list] 显示的内容\r\n */\nmodule.exports = [\n\n/**\r\n * 小口径主炮\r\n */\n// 12.7cm単装高角砲(後期型)\n// @ 神風型 / 睦月型\n// @ 占守型 / 択捉型 / 日振型\n{\n    equipment: 229,\n    ship: {\n        isClass: [84, 12, 92, 94, 108]\n    },\n    bonusImprove: {\n        10: {\n            fire: 1,\n            aa: 1\n        }\n    }\n},\n// 12.7cm単装高角砲(後期型)\n// @ 長良型 改二\n{\n    equipment: 229,\n    ship: {\n        isID: CL_NagaraClass2ndRemodel\n    },\n    bonusImprove: {\n        10: {\n            fire: 2,\n            aa: 3\n        }\n    }\n},\n// 12.7cm連装砲C型改二\n// @ 陽炎型 改二\n{\n    equipment: 266,\n    ship: {\n        isID: DD_KagerouClass2ndRemodel\n    },\n    bonusCount: {\n        1: {\n            fire: 1\n        },\n        2: {\n            fire: 3\n        }\n    }\n},\n// 12.7cm連装砲D型改二\n// @ 陽炎型\n{\n    equipment: 267,\n    ship: {\n        isClass: [21],\n        isNotID: DD_KagerouClass2ndRemodel\n    },\n    bonus: {\n        fire: 1,\n        evasion: 1\n    }\n},\n// 12.7cm連装砲D型改二\n// @ 夕雲型 / 島風型\n{\n    equipment: 267,\n    ship: {\n        isClass: [22, 24],\n        isNotID: DD_YuugumoClass2ndRemodel\n    },\n    bonus: {\n        fire: 2,\n        evasion: 1\n    }\n},\n// 12.7cm連装砲D型改二\n// @ 陽炎型 改二\n{\n    equipment: 267,\n    ship: {\n        isID: DD_KagerouClass2ndRemodel\n    },\n    bonusCount: {\n        1: {\n            fire: 2,\n            evasion: 1\n        },\n        2: {\n            fire: 3,\n            evasion: 2\n        },\n        3: {\n            fire: 4,\n            evasion: 3\n        }\n    }\n},\n// 12.7cm連装砲D型改二\n// @ 夕雲型 改二\n{\n    equipment: 267,\n    ship: {\n        isID: DD_YuugumoClass2ndRemodel\n    },\n    bonus: {\n        fire: 3,\n        evasion: 1\n    }\n},\n\n/**\r\n * 大口径主炮\r\n */\n// 35.6cm連装砲(ダズル迷彩)\n// @ 金剛改二\n{\n    equipment: 104,\n    ship: {\n        isID: [149]\n    },\n    bonus: {\n        fire: 2\n    }\n},\n// 35.6cm連装砲(ダズル迷彩)\n// @ 榛名改二\n{\n    equipment: 104,\n    ship: {\n        isID: [151]\n    },\n    bonus: {\n        fire: 2,\n        aa: 1,\n        evasion: 2\n    }\n},\n// 35.6cm連装砲(ダズル迷彩)\n// @ 比叡改二 / 霧島改二\n{\n    equipment: 104,\n    ship: {\n        isID: [150, 152]\n    },\n    bonus: {\n        fire: 1\n    }\n},\n// 35.6cm三連装砲改(ダズル迷彩仕様)\n// @ 金剛改二\n{\n    equipment: 289,\n    ship: {\n        isID: [149]\n    },\n    bonus: {\n        fire: 2,\n        aa: 1\n    }\n},\n// 35.6cm三連装砲改(ダズル迷彩仕様)\n// @ 榛名改二\n{\n    equipment: 289,\n    ship: {\n        isID: [151]\n    },\n    bonus: {\n        fire: 2,\n        aa: 2,\n        evasion: 2\n    }\n},\n// 35.6cm三連装砲改(ダズル迷彩仕様)\n// @ 比叡改二 / 霧島改二\n{\n    equipment: 289,\n    ship: {\n        isID: [150, 152]\n    },\n    bonus: {\n        fire: 1\n    }\n},\n// 41cm三連装砲改二\n// @ 扶桑型 改二\n{\n    equipment: 290,\n    ship: {\n        isID: BB_FusouClass2ndRemodel\n    },\n    bonus: {\n        fire: 1\n    }\n},\n// 41cm三連装砲改二\n// @ 伊勢型 改\n{\n    equipment: 290,\n    ship: {\n        isID: BB_IseClassRemodel\n    },\n    bonus: {\n        fire: 2,\n        aa: 2,\n        evasion: 1\n    }\n},\n// 41cm三連装砲改二\n// @ 伊勢型 改二\n{\n    equipment: 290,\n    ship: {\n        isID: BB_IseClass2ndRemodel\n    },\n    bonus: {\n        fire: 3,\n        aa: 2,\n        evasion: 1\n    }\n},\n\n/**\r\n * 鱼雷发射管\r\n */\n// 61cm三連装(酸素)魚雷後期型\n// @ 特型駆逐艦 改二 / 初春型 改二\n{\n    equipment: 285,\n    ship: {\n        isID: [].concat(DD_FubukiClass2ndRemodel, DD_AyanamiClass2ndRemodel, DD_AkatsukiClass2ndRemodel, DD_HatsuharuClass2ndRemodel)\n    },\n    bonusImprove: {\n        0: {\n            torpedo: 2,\n            evasion: 1\n        },\n        10: {\n            fire: 1,\n            torpedo: 2,\n            evasion: 1\n        }\n    }\n},\n// 61cm四連装(酸素)魚雷\n// @ 陽炎型 改二\n{\n    equipment: 15,\n    ship: {\n        isID: DD_KagerouClass2ndRemodel\n    },\n    bonusCount: {\n        1: {\n            torpedo: 2\n        },\n        2: {\n            torpedo: 4\n        }\n    }\n},\n// 61cm四連装(酸素)魚雷後期型\n// @ 陽炎型 改二\n{\n    equipment: 286,\n    ship: {\n        isID: DD_KagerouClass2ndRemodel\n    },\n    bonusImprove: {\n        0: {\n            torpedo: 2,\n            evasion: 1\n        },\n        5: {\n            torpedo: 3,\n            evasion: 1\n        },\n        10: {\n            fire: 1,\n            torpedo: 3,\n            evasion: 1\n        }\n    }\n},\n// 61cm四連装(酸素)魚雷後期型\n// @ 白露型 改二 / 朝潮型 改二 / 夕雲型 改二\n{\n    equipment: 286,\n    ship: {\n        isID: [].concat(DD_ShiratsuyuClass2ndRemodel, DD_AsashioClass2ndRemodel, DD_YuugumoClass2ndRemodel)\n    },\n    bonusImprove: {\n        0: {\n            torpedo: 2,\n            evasion: 1\n        },\n        10: {\n            fire: 1,\n            torpedo: 2,\n            evasion: 1\n        }\n    }\n},\n\n/**\r\n * 装甲板\r\n */\n// 北方迷彩(＋北方装備)\n// @ 球磨型 改\n{\n    equipment: 268,\n    ship: {\n        isID: CL_KumaClassRemodel\n    },\n    bonusCount: {\n        1: {\n            armor: 2,\n            evasion: 7\n        }\n    }\n},\n\n/**\r\n * 组合\r\n */\n// 12.7cm単装高角砲(後期型) + 对水上電探\n// @ 神風型 / 睦月型\n{\n    equipments: [{\n        isID: 229,\n        improvement: 10\n    }, {\n        isSurfaceRadar: !0\n    }],\n    ship: {\n        isClass: [84, 12]\n    },\n    bonus: {\n        fire: 2,\n        evasion: 3\n    }\n},\n// 12.7cm単装高角砲(後期型) + 对水上電探\n// @ 占守型 / 択捉型 / 日振型\n{\n    equipments: [{\n        isID: 229,\n        improvement: 10\n    }, {\n        isSurfaceRadar: !0\n    }],\n    ship: {\n        isClass: [92, 94, 108]\n    },\n    bonus: {\n        fire: 1,\n        evasion: 4\n    }\n},\n// 12.7cm単装高角砲(後期型)\n// @ 長良型 改二\n{\n    equipments: [{\n        isID: 229,\n        improvement: 10\n    }, {\n        isSurfaceRadar: !0\n    }],\n    ship: {\n        isID: CL_NagaraClass2ndRemodel\n    },\n    bonus: {\n        fire: 3,\n        evasion: 2\n    }\n},\n// 12.7cm連装砲D型改二 + 对水上電探\n// @ 夕雲型 改二 / 島風改\n{\n    list: [267, 'SurfaceRadar'],\n    equipments: {\n        hasID: [267],\n        hasSurfaceRadar: !0\n    },\n    ship: {\n        isID: DD_YuugumoClass2ndRemodel_PLUS_ShimakazeRemodel\n    },\n    bonus: {\n        fire: 1,\n        torpedo: 3,\n        evasion: 2\n    }\n},\n// 35.6cm三連装砲改(ダズル迷彩仕様) + 对水上電探\n// @ 金剛型 改二\n{\n    list: [289, 'SurfaceRadar'],\n    equipments: {\n        hasID: [289],\n        hasSurfaceRadar: !0\n    },\n    ship: {\n        isID: BB_KongouClass2ndRemodel\n    },\n    bonus: {\n        fire: 2,\n        evasion: 2\n    }\n},\n// 41cm三連装砲改二 + 对空電探\n// @ 伊勢型 改+\n{\n    list: [290, 'AARadar'],\n    equipments: {\n        hasID: [290],\n        hasAARadar: !0\n    },\n    ship: {\n        isID: BB_IseClassRemodelAll\n    },\n    bonus: {\n        aa: 2,\n        evasion: 3\n    }\n}];\n\n//# sourceURL=webpack:///./src/data/bonus.js?");

/***/ }),

/***/ "./src/get/equipment.js":
/*!******************************!*\
  !*** ./src/get/equipment.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (equipment) {\n    if (equipment && (typeof equipment === 'undefined' ? 'undefined' : _typeof(equipment)) === 'object' && equipment.id) {\n        return equipment;\n    } else if (!isNaN(equipment)) {\n        var data = KC.db.equipments || KC.db.items || {};\n        return data[parseInt(equipment)];\n    } else {\n        return undefined;\n    }\n};\n\n//# sourceURL=webpack:///./src/get/equipment.js?");

/***/ }),

/***/ "./src/get/ship-and-equipments.js":
/*!****************************************!*\
  !*** ./src/get/ship-and-equipments.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar getShip = __webpack_require__(/*! ./ship */ \"./src/get/ship.js\");\nvar getEquipment = __webpack_require__(/*! ./equipment */ \"./src/get/equipment.js\");\n\nvar maxSlotsPlusExtra = 5;\n\nmodule.exports = function (ship) {\n    var equipments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var equipmentStars = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var equipmentRanks = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    if (typeof equipments === 'number' || typeof equipments === 'string') equipments = [equipments];\n    if (typeof equipmentStars === 'number' || typeof equipmentStars === 'string') equipmentStars = [equipmentStars];\n    if (typeof equipmentRanks === 'number' || typeof equipmentRanks === 'string') equipmentRanks = [equipmentRanks];\n\n    ship = getShip(ship);\n\n    equipments = [].concat(_toConsumableArray(Array(Math.max(maxSlotsPlusExtra, ship.slot.length + 1)))).map(function (_, index) {\n        if (!ship) return undefined;\n        if (ship.slot.length <= index && index < 4) return undefined;\n        return getEquipment(equipments[index]) || undefined;\n        // if (!equipment) return undefined\n        // if (equipmentStars[index]) equipment.star = equipmentStars[index]\n        // if (equipmentRanks[index]) equipment.rank = equipmentRanks[index]\n        // return equipment\n    });\n\n    return {\n        ship: ship,\n        equipments: equipments,\n        equipmentStars: equipments.map(function (_, index) {\n            return _typeof(equipments[index]) === 'object' ? Math.min(10, parseInt(equipmentStars[index]) || 0) : undefined;\n        }),\n        equipmentRanks: equipments.map(function (_, index) {\n            return _typeof(equipments[index]) === 'object' ? Math.min(7, parseInt(equipmentRanks[index]) || 0) : undefined;\n        })\n    };\n};\n\n//# sourceURL=webpack:///./src/get/ship-and-equipments.js?");

/***/ }),

/***/ "./src/get/ship.js":
/*!*************************!*\
  !*** ./src/get/ship.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (ship) {\n    if ((typeof ship === 'undefined' ? 'undefined' : _typeof(ship)) === 'object' && ship.id) {\n        return ship;\n    } else if (!isNaN(ship)) {\n        return KC.db.ships[parseInt(ship)];\n    } else {\n        return undefined;\n    }\n};\n\n//# sourceURL=webpack:///./src/get/ship.js?");

/***/ }),

/***/ "./src/kckit.js":
/*!**********************!*\
  !*** ./src/kckit.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || !1; descriptor.configurable = !0; if (\"value\" in descriptor) descriptor.writable = !0; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: !1, writable: !0, configurable: !0 } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function (name, factory) {\n    // console.log(\n    //     name,\n    //     (typeof define === 'function' && define.amd) ? true : false,\n    //     (typeof module === 'object' && module.exports) ? true : false\n    // )\n    // if (typeof define === 'function' && define.amd) {\n    //     define(factory);\n    // } else if (typeof module === 'object' && module.exports) {\n    //     module.exports = factory()\n    // } else {\n    window[name] = factory();\n    // }\n})('KC', function () {\n\n    \"use strict\";\n\n    var dataBonuses = __webpack_require__(/*! ./data/bonus */ \"./src/data/bonus.js\");\n    var calculateBonus = __webpack_require__(/*! ./calculate/bonus */ \"./src/calculate/bonus.js\");\n    var checkShip = __webpack_require__(/*! ./check/ship */ \"./src/check/ship.js\");\n    var checkEquipment = __webpack_require__(/*! ./check/equipment */ \"./src/check/equipment.js\");\n\n    var KC = {\n        lang: 'zh_cn',\n        joint: '・',\n        maxShipLv: 165,\n        maxHqLv: 120,\n        db: {},\n        path: {\n            db: '/kcdb/',\n            pics: {\n                ships: '/kcpic/ships/'\n            }\n        },\n        statSpeed: {\n            5: '低速',\n            10: '高速',\n            15: '高速+',\n            20: '最速'\n        },\n        getStatSpeed: function getStatSpeed(speed) {\n            return this.statSpeed[parseInt(speed)];\n        },\n        statRange: {\n            1: '短',\n            2: '中',\n            3: '长',\n            4: '超长'\n        },\n        getStatRange: function getStatRange(range) {\n            return this.statRange[parseInt(range)];\n        },\n        textRank: {\n            1: '|',\n            2: '||',\n            3: '|||',\n            4: '\\\\',\n            5: '\\\\\\\\',\n            6: '\\\\\\\\\\\\',\n            7: '》'\n        },\n        check: {\n            ship: checkShip,\n            equipment: checkEquipment\n        }\n    };\n\n    /**\r\n     * KC Classes\r\n     */\n    // Base class\n\n    var ItemBase = function () {\n        function ItemBase(data) {\n            _classCallCheck(this, ItemBase);\n\n            for (var i in data) {\n                this[i] = data[i];\n            }\n        }\n\n        _createClass(ItemBase, [{\n            key: 'getName',\n            value: function getName(language) {\n                language = language || KC.lang;\n                return this.name ? this.name[language] || this.name : null;\n            }\n        }, {\n            key: 'isName',\n\n\n            /**\r\n             * 检查名称是否为（完全匹配）给定字符串\r\n             * \r\n             * @param {String} nameToCheck - 要检查的名称\r\n             * @param {Boolean|String} [locale] - 要检查的语言。如果为 true 检查当前语言，如果为 falsy 检查所有语言\r\n             * @returns {Boolean} - 是否匹配\r\n             */\n            value: function isName(nameToCheck, locale) {\n                if (locale === !0) locale = KC.lang;\n                if (locale) {\n                    if (this.name[locale] === nameToCheck) return !0;\n                    return !1;\n                }\n\n                for (var key in this.name) {\n                    if (key === 'suffix') continue;\n                    if (this.name[key] === nameToCheck) return !0;\n                }\n                return !1;\n            }\n\n            /**\r\n             * 检查名称是否包含给定字符串\r\n             * \r\n             * @param {String} nameToCheck - 要检查的名称\r\n             * @param {Boolean|String} [locale] - 要检查的语言。如果为 true 检查当前语言，如果为 falsy 检查所有语言\r\n             * @returns {Boolean} - 是否匹配\r\n             */\n\n        }, {\n            key: 'hasName',\n            value: function hasName(nameToCheck, locale) {\n                if (locale === !0) locale = KC.lang;\n                if (locale) {\n                    if (this.name[locale].includes(nameToCheck)) return !0;\n                    return !1;\n                }\n\n                for (var key in this.name) {\n                    if (key === 'suffix') continue;\n                    if (this.name[key].includes(nameToCheck)) return !0;\n                }\n                return !1;\n            }\n        }, {\n            key: 'isNameOf',\n            value: function isNameOf() {\n                return this.hasName.apply(this, arguments);\n            }\n        }, {\n            key: '_name',\n            get: function get() {\n                return this.getName();\n            }\n        }]);\n\n        return ItemBase;\n    }();\n    // Class for Entity (Person/Group, such as CVs, illustrators)\n\n\n    var Entity = function (_ItemBase) {\n        _inherits(Entity, _ItemBase);\n\n        function Entity(data) {\n            _classCallCheck(this, Entity);\n\n            return _possibleConstructorReturn(this, (Entity.__proto__ || Object.getPrototypeOf(Entity)).call(this, data));\n        }\n\n        return Entity;\n    }(ItemBase);\n\n    var Equipment = function (_ItemBase2) {\n        _inherits(Equipment, _ItemBase2);\n\n        function Equipment(data) {\n            _classCallCheck(this, Equipment);\n\n            var _this2 = _possibleConstructorReturn(this, (Equipment.__proto__ || Object.getPrototypeOf(Equipment)).call(this, data));\n\n            Object.defineProperty(_this2, 'rankupgradable', {\n                value: _this2.isRankUpgradable()\n            });\n            return _this2;\n        }\n\n        _createClass(Equipment, [{\n            key: 'getName',\n            value: function getName(small_brackets, language) {\n                language = language || KC.lang;\n                var result = ItemBase.prototype.getName.call(this, language),\n                    small_brackets_tag = small_brackets && !small_brackets === !0 ? small_brackets : 'small';\n                return small_brackets ? result.replace(/（([^（^）]+)）/g, '<' + small_brackets_tag + '>($1)</' + small_brackets_tag + '>') : result;\n            }\n        }, {\n            key: 'getType',\n            value: function getType(language) {\n                language = language || KC.lang;\n                return this.type ? KC.db.item_types[this.type].name[language] : null;\n            }\n        }, {\n            key: 'getIconId',\n            value: function getIconId() {\n                if (Array.isArray(this.type_ingame) && this.type_ingame.length > 3) return this.type_ingame[3];\n                return KC.db.item_types[this.type].icon;\n            }\n        }, {\n            key: 'getCaliber',\n            value: function getCaliber() {\n                var name = this.getName(!1, 'ja_jp'),\n                    caliber = parseFloat(name);\n\n                return caliber;\n            }\n        }, {\n            key: 'getPower',\n            value: function getPower() {\n                return this.stat[KC.db.item_types[this.type].main_attribute || 'fire'];\n                /*\r\n                switch( this.type ){\r\n                    // Guns\r\n                        case 1:\r\n                        case 2:\r\n                        case 3:\r\n                        case 4:\r\n                        case 5:\r\n                        case 6:\r\n                        case 7:\r\n                        case 8:\r\n                        case 9:\r\n                }\r\n                */\n            }\n\n            /**\r\n             * 判断是否可装备入补强增设栏位\r\n             * \r\n             * @returns {boolean}\r\n             */\n\n        }, {\n            key: 'isEquipableExSlot',\n            value: function isEquipableExSlot() {\n                if (this.equipable_exslot) return this.equipable_exslot || !1;\n                return this.type ? KC.db.item_types[this.type].equipable_exslot || !1 : !1;\n            }\n\n            /**\r\n             * 判断是否可提升熟练度\r\n             * \r\n             * @returns {boolean}\r\n             */\n\n        }, {\n            key: 'isRankUpgradable',\n            value: function isRankUpgradable() {\n                return formula.equipmentType.Aircrafts.includes(this.type) && this.type !== formula.equipmentType.Autogyro && this.type !== formula.equipmentType.AntiSubPatrol;\n            }\n\n            /**\r\n             * 获取属性\r\n             * \r\n             * @param {String} statType - 属性类型\r\n             * @param {Number|Object} [ship] - 舰娘ID或舰娘数据，如果给出，会查询额外收益\r\n             * @returns {boolean}\r\n             */\n\n        }, {\n            key: 'getStat',\n            value: function getStat(statType, ship) {\n                statType = statType.toLowerCase();\n                var base = this.stat[statType];\n                if (!ship || base === undefined || !Array.isArray(this.stat_bonus)) return base;\n                if (ship && Array.isArray(this.stat_bonus)) {\n                    if ((typeof ship === 'undefined' ? 'undefined' : _typeof(ship)) !== 'object') ship = KC.db.ships[ship];\n                    var shipId = ship.id;\n\n                    var bonus = void 0;\n\n                    this.stat_bonus.forEach(function (o) {\n                        if (Array.isArray(o.ships)) o.ships.some(function (ship) {\n                            if (ship == shipId) {\n                                for (var stat in o.bonus) {\n                                    if (!bonus) bonus = {};\n                                    bonus[stat] = Math.max(o.bonus[stat], bonus[stat] || 0);\n                                }\n                                return !0;\n                            }\n                            return !1;\n                        });\n                        if (Array.isArray(o.ship_classes)) o.ship_classes.some(function (classId) {\n                            if (classId == ship.class) {\n                                for (var stat in o.bonus) {\n                                    if (!bonus) bonus = {};\n                                    bonus[stat] = Math.max(o.bonus[stat], bonus[stat] || 0);\n                                }\n                                return !0;\n                            }\n                            return !1;\n                        });\n                        // return typeof bonus !== 'undefined'\n                    });\n                    if (bonus) {\n                        return base + (bonus[statType] || 0);\n                    }\n                }\n                return base;\n            }\n\n            /**\r\n             * 获取该装备所有可用的属性加成和装备组合\r\n             * @returns {Array} Bonuses\r\n             */\n\n        }, {\n            key: 'getBonuses',\n            value: function getBonuses() {\n                var _this3 = this;\n\n                return dataBonuses.filter(function (bonus) {\n                    if (bonus.equipment == _this3.id) return !0;\n                    if (Array.isArray(bonus.equipments)) {\n                        return bonus.equipments.some(function (condition) {\n                            return checkEquipment(_this3, 10, 7, condition);\n                        });\n                    }\n                    if (_typeof(bonus.equipments) === 'object') {\n                        return checkEquipment(_this3, {\n                            isID: bonus.equipments.hasID,\n                            isNotID: bonus.equipments.hasNotID\n                        });\n                    }\n                    return !1;\n                });\n            }\n        }, {\n            key: '_icon',\n            get: function get() {\n                return 'assets/images/itemicon/' + this.getIconId() + '.png';\n            }\n        }]);\n\n        return Equipment;\n    }(ItemBase);\n\n    var Ship = function (_ItemBase3) {\n        _inherits(Ship, _ItemBase3);\n\n        function Ship(data) {\n            _classCallCheck(this, Ship);\n\n            return _possibleConstructorReturn(this, (Ship.__proto__ || Object.getPrototypeOf(Ship)).call(this, data));\n        }\n        /**\r\n         * @param {string} joint - OPTIONAL - 连接符，如果存在后缀名，则在舰名和后缀名之间插入该字符串\r\n         * @param {bollean} joint - OPTIONAL - 如果为 true，则添加默认连接符；false，则不添加连接符\r\n         * @param {null} joint - OPTIONAL - 不添加连接符\r\n         * @param {string} language - OPTIONAL - 语言代码，默认为 KCTip.lang\r\n         * @return {string} 舰名 + 连接符（如果有） + 后缀名（如果有）\r\n         * 快捷方式 - ship._name (默认连接符，默认语言)\r\n         */\n\n\n        _createClass(Ship, [{\n            key: 'getName',\n            value: function getName(joint, language) {\n                joint = joint || '';\n                language = language || KC.lang;\n                var suffix = this.getSuffix(language);\n                return (this.name[language] || this.name.ja_jp) + (suffix ? (joint === !0 ? KC.joint : joint) + suffix : '');\n            }\n            /*\t获取舰名，不包括后缀\r\n                变量\r\n                    language\t[OPTIONAL]\r\n                        String\t\t语言代码，默认为 KC.lang\r\n                返回值\r\n                    String\t\t舰名，不包括后缀\r\n            */\n\n        }, {\n            key: 'getNameNoSuffix',\n            value: function getNameNoSuffix(language) {\n                language = language || KC.lang;\n                return this.name[language] || this.name.ja_jp;\n            }\n            /*\t获取后缀名\r\n                变量\r\n                    language\t[OPTIONAL]\r\n                        String\t\t语言代码，默认为 KC.lang\r\n                返回值\r\n                    String\t\t后缀名\r\n            */\n\n        }, {\n            key: 'getSuffix',\n            value: function getSuffix(language) {\n                language = language || KC.lang;\n                return this.name.suffix ? KC.db.ship_namesuffix[this.name.suffix][language] || KC.db.ship_namesuffix[this.name.suffix].ja_jp || '' : '';\n            }\n            /*\t获取舰种\r\n                变量\r\n                    language\t[OPTIONAL]\r\n                        String\t\t语言代码，默认为 KC.lang\r\n                返回值\r\n                    String\t\t舰种\r\n                快捷方式\r\n                    ship._type\t默认语言\r\n            */\n\n        }, {\n            key: 'getType',\n            value: function getType(language) {\n                language = language || KC.lang;\n                return this.type ? KC.db.ship_types[this.type].name[language] || KC.db.ship_types[this.type].name.ja_jp || '' : null;\n            }\n        }, {\n            key: 'getSeriesData',\n\n            /*\t获取系列数据\r\n                返回值\r\n                    Object\t\t系列\r\n            */\n            value: function getSeriesData() {\n                return this.series ? KC.db.ship_series[this.series].ships : [{\n                    'id': this.id\n                }];\n            }\n        }, {\n            key: 'getPic',\n\n            /**\r\n             * 获取图鉴uri/path\r\n             * \r\n             * @param {number} [picId = 0] - 图鉴Id，默认 0\r\n             * @param {string} [ext]\r\n             * @returns {string} uri/path\r\n             * \r\n             * @memberOf Ship\r\n             * \r\n             * 快捷方式\r\n             *      ship._pics\t获取全部图鉴，Array\r\n             */\n            value: function getPic(picId, ext) {\n                var series = this.getSeriesData();\n                picId = parseInt(picId || 0);\n\n                var getURI = function getURI(i, p) {\n                    if (typeof node != 'undefined' && node && node.path && KC.path.pics.ships) return node.path.join(KC.path.pics.ships, i + '/' + p + '.' + (ext ? ext : 'webp'));\n                    if (KC.path.pics.ships) return KC.path.pics.ships + i + '/' + p + '.' + (ext ? ext : 'png');\n                    return '/' + i + '/' + p + '.' + (ext ? ext : 'png');\n                };\n\n                for (var i = 0; i < series.length; i++) {\n                    if (series[i].id == this.id) {\n                        switch (picId) {\n                            case 0:\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 12:\n                            case 13:\n                            case 14:\n                                return getURI(this.id, picId);\n                            //break;\n                            default:\n                                if (series[i].illust_delete) {\n                                    return getURI(series[i - 1].id, picId);\n                                } else {\n                                    return getURI(this.id, picId);\n                                }\n                            //break;\n                        }\n                        //break;\n                    }\n                }\n            }\n        }, {\n            key: 'getSpeed',\n            value: function getSpeed() /*language*/{\n                // language = language || KC.lang\n                return KC.statSpeed[parseInt(this.stat.speed)];\n            }\n        }, {\n            key: 'getSpeedRule',\n            value: function getSpeedRule() {\n                if (this.speed_rule) return this.speed_rule;\n                // if (this.name.ja_jp === '天津風') return 'high-2'\n                return this.class ? KC.db.ship_classes[this.class].speed_rule : null;\n            }\n        }, {\n            key: 'getRange',\n            value: function getRange() /*language*/{\n                // language = language || KC.lang\n                return KC.statRange[parseInt(this.stat.range)];\n            }\n        }, {\n            key: 'getEquipmentTypes',\n            value: function getEquipmentTypes(slotIndex) {\n                var disabled = this.additional_disable_item_types || [];\n                var shipType = KC.db.ship_types[this.type];\n                var types = shipType.equipable.concat(this.additional_item_types || []);\n                if (typeof slotIndex === 'number' && Array.isArray(shipType.additional_item_types_by_slot) && Array.isArray(shipType.additional_item_types_by_slot[slotIndex])) {\n                    shipType.additional_item_types_by_slot[slotIndex].forEach(function (id) {\n                        return types.push(id);\n                    });\n                }\n                return types.filter(function (type) {\n                    return disabled.indexOf(type) < 0;\n                }).sort(function (a, b) {\n                    return a - b;\n                });\n            }\n        }, {\n            key: 'getAttribute',\n            value: function getAttribute(attr, lvl) {\n                lvl = lvl || 1;\n                if (lvl > Ship.lvlMax) lvl = Ship.lvlMax;\n\n                var getStatOfLvl = function getStatOfLvl(lvl, base, max) {\n                    lvl = lvl || 1;\n                    base = parseFloat(base);\n                    max = parseFloat(max) || base;\n                    if (base < 0 || max < 0) return -1;\n                    if (base == max) return max;\n                    return Math.floor(base + (max - base) * lvl / 99);\n                };\n\n                var value = void 0;\n\n                switch (attr) {\n                    case 'hp':\n                        value = this.stat.hp;\n                        if (lvl > 99) {\n                            if (this.stat.hp >= 90) value = this.stat.hp + 9;else if (this.stat.hp >= 70) value = this.stat.hp + 8;else if (this.stat.hp >= 50) value = this.stat.hp + 7;else if (this.stat.hp >= 40) value = this.stat.hp + 6;else if (this.stat.hp >= 30) value = this.stat.hp + 5;else value = this.stat.hp + 4;\n                            if (value > this.stat.hp_max) value = this.stat.hp_max;\n                        }\n                        return value;\n                    //break;\n                    case 'speed':\n                        return KC.getStatSpeed(this.stat.speed);\n                    //break;\n                    case 'range':\n                        return KC.getStatRange(this.stat.range);\n                    //break;\n                    case 'luck':\n                        if (lvl > 99) return this.stat.luck + 3;\n                        return this.stat.luck;\n                    //break;\n                    case 'fuel':\n                    case 'ammo':\n                        if (lvl > 99) return Math.floor(this.consum[attr] * 0.85);\n                        return this.consum[attr];\n                    //break;\n                    case 'aa':\n                    case 'armor':\n                    case 'fire':\n                    case 'torpedo':\n                        return this.stat[attr + '_max'] || this.stat[attr];\n                    //break;\n                    default:\n                        return getStatOfLvl(lvl, this.stat[attr], this.stat[attr + '_max']);\n                    //break;\n                }\n            }\n            /*\t获取关系\r\n                变量\r\n                    relation\t[OPTIONAL]\r\n                        String\t\t关系名\r\n                返回值\r\n                    Object\t\t\t如果没有给出 relation，返回关系对象\r\n                    String||Number\t如果给出 relation，返回值，默认读取 rels 下的属性，如果不存在，读取上一个改造版本的对应关系\r\n            */\n\n        }, {\n            key: 'getRel',\n            value: function getRel(relation) {\n                if (relation) {\n                    if (!this.rels[relation] && this.remodel && this.remodel.prev) {\n                        var prev = KC.db.ships[this.remodel.prev];\n                        while (prev) {\n                            if (prev.rels && prev.rels[relation]) return prev.rels[relation];\n                            if (!prev.remodel || !prev.remodel.prev) prev = null;else prev = KC.db.ships[prev.remodel.prev];\n                        }\n                    }\n                    return this.rels[relation];\n                } else {\n                    return this.rels;\n                }\n            }\n            /*\t获取声优\r\n                变量\r\n                    language\t[OPTIONAL]\r\n                        String\t\t语言代码，默认为 KC.lang\r\n                返回值\r\n                    String\t\t声优名\r\n                快捷方式\r\n                    ship._cv\t默认语言\r\n            */\n\n        }, {\n            key: 'getCV',\n            value: function getCV(language) {\n                var entity = this.getRel('cv');\n                if (entity) return KC.db.entities[entity].getName(language || KC.lang);\n                return;\n            }\n        }, {\n            key: 'getIllustrator',\n\n            /*\t获取画师\r\n                变量\r\n                    language\t[OPTIONAL]\r\n                        String\t\t语言代码，默认为 KC.lang\r\n                返回值\r\n                    String\t\t画师名\r\n                快捷方式\r\n                    ship._illustrator\t默认语言\r\n            */\n            value: function getIllustrator(language) {\n                var entity = this.getRel('illustrator');\n                if (entity) return KC.db.entities[entity].getName(language || KC.lang);\n                return;\n            }\n        }, {\n            key: 'getMinLv',\n\n\n            /* 获取该舰娘可能的最低等级\r\n             */\n            value: function getMinLv() {\n                var _this5 = this;\n\n                var series = this._series;\n                var lv = void 0;\n                series.some(function (o, index) {\n                    if (_this5.id == o.id) {\n                        if (index) {\n                            lv = series[index - 1].next_lvl;\n                        } else {\n                            lv = 1;\n                        }\n                    }\n                    return lv;\n                });\n                return lv;\n            }\n        }, {\n            key: 'getNavy',\n\n\n            /**\r\n             * 获取所属海军简称\r\n             * \r\n             * @readonly\r\n             * @returns {String}\r\n             */\n            value: function getNavy() {\n                if (this.navy) return this.navy;\n                return this.class ? KC.db.ship_classes[this.class].navy || 'ijn' : 'ijn';\n            }\n        }, {\n            key: 'getCapability',\n\n\n            /**\r\n             * 获取额外能力\r\n             * \r\n             * @param {String} [type] - 要获取的能力\r\n             * @returns {Object|...} - 如果提供了 type，返回该能力。如果没有，返回 Object\r\n             */\n            value: function getCapability(type) {\n                if (!type) return this.capabilities || {};\n                if (!this.capabilities) return undefined;\n                return this.capabilities[type];\n            }\n\n            /**\r\n             * 获取额外可提升的值\r\n             * \r\n             * @param {String} [type] - 要获取的属性名\r\n             * @returns {Number} - 数值\r\n             */\n\n        }, {\n            key: 'getStatExtraMax',\n            value: function getStatExtraMax(type) {\n                var lvl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n                switch (type.toLowerCase()) {\n                    case 'hp':\n                        {\n                            // const hpBase = this.getStat(type, 99)\n                            // const hpAfterMarriage = this.getStat(type, 100)\n                            var stat = this.getAttribute(type, lvl);\n                            var statMax = this.stat.hp_max;\n                            return Math.max(0, Math.min(2, statMax - stat));\n                        }\n                    case 'asw':\n                        {\n                            if (this.stat.asw) return 9;\n                            if (formula.shipType.LightCruisers.concat(formula.shipType.Destroyers).includes(this.type)) return 9;\n                            return !1;\n                        }\n                    default:\n                        return !1;\n                }\n            }\n\n            /**\r\n             * 获取该舰娘所有可用的属性加成装备和装备组合\r\n             * @returns {Array} Bonuses\r\n             */\n\n        }, {\n            key: 'getBonuses',\n            value: function getBonuses() {\n                var _this6 = this;\n\n                return dataBonuses.filter(function (bonus) {\n                    return checkShip(_this6, bonus.ship);\n                });\n            }\n        }, {\n            key: '_type',\n            get: function get() {\n                return this.getType();\n            }\n        }, {\n            key: '_series',\n            get: function get() {\n                return this.getSeriesData();\n            }\n        }, {\n            key: '_pics',\n            get: function get() {\n                var arr = [];\n                for (var i = 0; i < 15; i++) {\n                    arr.push(this.getPic(i));\n                }\n                return arr;\n            }\n        }, {\n            key: '_speed',\n            get: function get() {\n                return this.getSpeed();\n            }\n        }, {\n            key: '_speedRule',\n            get: function get() {\n                return this.getSpeedRule();\n            }\n        }, {\n            key: '_range',\n            get: function get() {\n                return this.getRange();\n            }\n        }, {\n            key: '_cv',\n            get: function get() {\n                return this.getCV();\n            }\n        }, {\n            key: '_illustrator',\n            get: function get() {\n                return this.getIllustrator();\n            }\n        }, {\n            key: '_minLv',\n            get: function get() {\n                return this.getMinLv();\n            }\n        }, {\n            key: '_navy',\n            get: function get() {\n                return this.getNavy();\n            }\n        }]);\n\n        return Ship;\n    }(ItemBase);\n\n    Ship.lvlMax = KC.maxShipLv;\n\n    var Consumable = function (_ItemBase4) {\n        _inherits(Consumable, _ItemBase4);\n\n        function Consumable(data) {\n            _classCallCheck(this, Consumable);\n\n            return _possibleConstructorReturn(this, (Consumable.__proto__ || Object.getPrototypeOf(Consumable)).call(this, data));\n        }\n\n        return Consumable;\n    }(ItemBase);\n\n    /**\r\n     * KC Database\r\n     */\n\n\n    KC.dbLoad = function (o) {\n        if (typeof o == 'string') return KC.dbLoad({ type: o });\n\n        if (!o.type && !o.url) return null;\n\n        return $.ajax({\n            'url': o.url || KC.path.db + '/' + o.type + '.json',\n            'dataType': 'text',\n            'success': function success(data) {\n                var arr = [];\n                if (o.beforeProcess) arr = o.beforeProcess(data);\n                if (typeof KC.db[o.type] == 'undefined') KC.db[o.type] = {};\n                arr.forEach(function (str) {\n                    if (str) {\n                        var doc = JSON.parse(str);\n                        switch (o.type) {\n                            case 'ships':\n                                KC.db[o.type][doc.id] = new Ship(doc);\n                                break;\n                            case 'items':\n                                KC.db[o.type][doc.id] = new Equipment(doc);\n                                break;\n                            case 'entities':\n                                KC.db[o.type][doc.id] = new Entity(doc);\n                                break;\n                            default:\n                                KC.db[o.type][doc.id] = doc;\n                                break;\n                        }\n                    }\n                });\n                if (o.success) o.success(data);\n            },\n            'complete': function complete(jqXHR, textStatus) {\n                if (o.complete) o.complete(jqXHR, textStatus);\n            }\n        });\n    };\n\n    /**\r\n     * KC Formulas\r\n     */\n    var _ship = function _ship(ship) {\n        return ship instanceof Ship ? ship : KC.db.ships ? KC.db.ships[ship] : {};\n    };\n    var _equipment = function _equipment(equipment) {\n        return equipment instanceof Equipment ? equipment : KC.db.equipments ? KC.db.equipments[equipment] : KC.db.items[equipment];\n    };\n    var _slots = function _slots(arrSlot) {\n        var slots = [];\n        arrSlot.forEach(function (value, index) {\n            slots[index >= 4 ? index + 1 : index] = value;\n        });\n        // let slots = arrSlot.map(value => value)\n        slots[4] = 0;\n        return slots;\n    };\n    var formula = {\n        // 装备类型\n        equipmentType: {\n            SmallCaliber: 1, // 小口径主炮\n            SmallCaliberHigh: 2, // 小口径主炮（高角）\n            SmallCaliberAA: 3, // 小口径主炮（高射）\n            MediumCaliber: 4, // 中口径主炮\n            LargeCaliber: 5, // 大口径主炮\n            SuperCaliber: 6, // 超大口径主炮\n            SecondaryGun: 7, // 副炮\n            SecondaryGunHigh: 8, // 副炮（高角）\n            SecondaryGunAA: 9, // 副炮（高射）\n            APShell: 11, // 穿甲弹\n            Torpedo: 12, // 鱼雷\n            SubmarineTorpedo: 13, // 潜艇鱼雷\n            MidgetSubmarine: 14, // 微型潜艇\n            ReconSeaplane: 15, // 水上侦察机\n            ReconSeaplaneNight: 16, // 夜侦\n            SeaplaneBomber: 17, // 水上轰炸机\n            CarrierFighter: 18, // 舰战 / 舰载战斗机\n            TorpedoBomber: 19, // 舰攻 / 舰载鱼雷轰炸机\n            DiveBomber: 20, // 舰爆 / 舰载俯冲轰炸机\n            CarrierRecon: 21, // 舰侦 / 舰载侦察机\n            Autogyro: 22, // 旋翼机\n            AntiSubPatrol: 23, // 对潜哨戒机\n            SmallRadar: 24, // 小型雷达\n            LargeRadar: 25, // 大型雷达\n            DepthCharge: 26, // 爆雷\n            Sonar: 27, // 声纳\n            LargeSonar: 28, // 大型声纳\n            AAGun: 29, // 对空机枪\n            AAGunConcentrated: 30, // 对空机枪（集中配备）\n            AAFireDirector: 31, // 高射装置\n            AviationPersonnel: 36, // 航空作战整备员\n            SurfaceShipPersonnel: 37, // 水上舰要员\n            LandingCraft: 38, // 登陆艇\n            Searchlight: 39, // 探照灯\n            CommandFacility: 45, // 舰队司令部设施\n            LargeFlyingBoat: 45, // 大型水上飞艇\n            SearchlightLarge: 46, // 大型探照灯\n            SuparRadar: 47, // 超大型雷达\n            CarrierRecon2: 50, // 舰侦II / 舰载侦察机II\n            SeaplaneFighter: 51, // 水战 / 水上战斗机\n            AmphibiousCraft: 52, // 特型内火艇\n            LandBasedAttacker: 53, // 陆攻 / 陆上攻击机\n            Interceptor: 54, // 局战 / 局地战斗机\n            JetBomberFighter: 55, // 喷气式战斗轰炸机\n            JetBomberFighter2: 56, // 喷气式战斗轰炸机\n            TransportMaterial: 57, // 运输设备\n            SubmarineEquipment: 58, // 潜艇装备\n            LandBasedFighter: 59, // 陆战 / 陆上战斗机\n            CarrierFighterNight: 60, // 夜战 / 舰载战斗机（夜间）\n            TorpedoBomberNight: 61, // 夜攻 / 舰载鱼雷机（夜间）\n            LandBasedAntiSubPatrol: 62 // 陆上哨戒机\n        },\n        // 舰种\n        shipType: {\n            // 航母系列\n            Carriers: [9, // 轻型航母\n            10, // 正规航母\n            11, // 装甲航母\n            30, // 攻击型轻航母\n            32],\n            // 轻巡系列\n            LightCruisers: [2, // 轻巡洋舰\n            3, // 重雷装巡洋舰\n            21, // 练习巡洋舰\n            28 // 防空轻巡洋舰\n            ],\n            // 驱逐舰系列\n            Destroyers: [1, // 驱逐舰\n            19 // 防空驱逐舰\n            ],\n            // 潜艇系列\n            Submarines: [13, // 潜艇\n            14 // 航母潜艇\n            ]\n        },\n        // 根据舰娘与其装备计算\n        calcByShip: {},\n        // 根据舰队配置计算\n        calcByFleet: {},\n        // 根据航空队机场与其飞行器配置计算\n        calcByField: {},\n        calc: {}\n    };\n    var _equipmentType = formula.equipmentType;\n    {\n        // 装备类型集合\n        _equipmentType.MainGuns = [_equipmentType.SmallCaliber, _equipmentType.SmallCaliberHigh, _equipmentType.SmallCaliberAA, _equipmentType.MediumCaliber, _equipmentType.LargeCaliber, _equipmentType.SuperCaliber];\n\n        _equipmentType.SmallCalibers = [_equipmentType.SmallCaliber, _equipmentType.SmallCaliberHigh, _equipmentType.SmallCaliberAA];\n\n        _equipmentType.MediumCalibers = [_equipmentType.MediumCaliber];\n\n        _equipmentType.LargeCalibers = [_equipmentType.LargeCaliber, _equipmentType.SuperCaliber];\n\n        _equipmentType.SecondaryGuns = [_equipmentType.SecondaryGun, _equipmentType.SecondaryGunHigh, _equipmentType.SecondaryGunAA];\n\n        _equipmentType.APShells = [_equipmentType.APShell];\n\n        _equipmentType.Torpedos = [_equipmentType.Torpedo, _equipmentType.SubmarineTorpedo];\n\n        _equipmentType.Seaplanes = [_equipmentType.ReconSeaplane, _equipmentType.ReconSeaplaneNight, _equipmentType.SeaplaneBomber, _equipmentType.SeaplaneFighter];\n\n        _equipmentType.Fighters = [_equipmentType.SeaplaneBomber, _equipmentType.CarrierFighter, _equipmentType.CarrierFighterNight, _equipmentType.TorpedoBomber, _equipmentType.TorpedoBomberNight, _equipmentType.DiveBomber, _equipmentType.SeaplaneFighter, _equipmentType.LandBasedAttacker, _equipmentType.Interceptor,\n        // _equipmentType.CarrierRecon\n        _equipmentType.JetBomberFighter, _equipmentType.JetBomberFighter2, _equipmentType.LandBasedFighter];\n\n        _equipmentType.Interceptors = [_equipmentType.Interceptor, _equipmentType.LandBasedFighter];\n\n        _equipmentType.Recons = [_equipmentType.ReconSeaplane, _equipmentType.ReconSeaplaneNight, _equipmentType.CarrierRecon, _equipmentType.CarrierRecon2, _equipmentType.LargeFlyingBoat];\n\n        _equipmentType.ReconSeaplanes = [_equipmentType.ReconSeaplane, _equipmentType.ReconSeaplaneNight];\n\n        _equipmentType.SeaplaneRecons = [_equipmentType.ReconSeaplane, _equipmentType.ReconSeaplaneNight, _equipmentType.LargeFlyingBoat];\n\n        _equipmentType.SeaplaneBombers = [_equipmentType.SeaplaneBomber, _equipmentType.SeaplaneFighter];\n\n        _equipmentType.SeaplaneFighters = [_equipmentType.SeaplaneFighter];\n\n        _equipmentType.CarrierFighters = [_equipmentType.CarrierFighter, _equipmentType.CarrierFighterNight];\n\n        _equipmentType.CarrierRecons = [_equipmentType.CarrierRecon, _equipmentType.CarrierRecon2];\n\n        _equipmentType.CarrierBased = [_equipmentType.CarrierFighter, _equipmentType.CarrierFighterNight, _equipmentType.TorpedoBomber, _equipmentType.TorpedoBomberNight, _equipmentType.DiveBomber, _equipmentType.CarrierRecon, _equipmentType.CarrierRecon2, _equipmentType.JetBomberFighter, _equipmentType.JetBomberFighter2];\n\n        _equipmentType.LandBased = [_equipmentType.LandBasedAttacker, _equipmentType.Interceptor, _equipmentType.JetBomberFighter, _equipmentType.JetBomberFighter2, _equipmentType.LandBasedFighter, _equipmentType.LandBasedAntiSubPatrol];\n\n        _equipmentType.TorpedoBombers = [_equipmentType.TorpedoBomber, _equipmentType.TorpedoBomberNight];\n\n        _equipmentType.DiveBombers = [_equipmentType.DiveBomber];\n\n        _equipmentType.JetBomberFighters = [_equipmentType.JetBomberFighter, _equipmentType.JetBomberFighter2];\n\n        _equipmentType.Autogyros = [_equipmentType.Autogyro];\n\n        _equipmentType.AntiSubPatrols = [_equipmentType.AntiSubPatrol, _equipmentType.LandBasedAntiSubPatrol];\n\n        _equipmentType.Aircrafts = [];\n        [].concat(_equipmentType.Seaplanes).concat(_equipmentType.Recons).concat(_equipmentType.CarrierBased).concat(_equipmentType.Autogyros).concat(_equipmentType.AntiSubPatrols).concat(_equipmentType.LandBased).forEach(function (v) {\n            if (_equipmentType.Aircrafts.indexOf(v) < 0) _equipmentType.Aircrafts.push(v);\n        });\n\n        _equipmentType.Radars = [_equipmentType.SmallRadar, _equipmentType.LargeRadar, _equipmentType.SuparRadar];\n\n        _equipmentType.SmallRadars = [_equipmentType.SmallRadar];\n\n        _equipmentType.LargeRadars = [_equipmentType.LargeRadar, _equipmentType.SuparRadar];\n\n        _equipmentType.AntiSubmarines = [_equipmentType.DepthCharge, _equipmentType.Sonar, _equipmentType.LargeSonar];\n\n        _equipmentType.DepthCharges = [_equipmentType.DepthCharge];\n\n        _equipmentType.Sonars = [_equipmentType.Sonar, _equipmentType.LargeSonar];\n\n        _equipmentType.AAGuns = [_equipmentType.AAGun, _equipmentType.AAGunConcentrated];\n\n        _equipmentType.AAFireDirectors = [_equipmentType.AAFireDirector];\n\n        _equipmentType.Searchlights = [_equipmentType.Searchlight, _equipmentType.SearchlightLarge];\n\n        _equipmentType.AviationPersonnels = [_equipmentType.AviationPersonnel];\n\n        _equipmentType.SurfaceShipPersonnels = [_equipmentType.SurfaceShipPersonnel];\n\n        _equipmentType.LandingCrafts = [_equipmentType.LandingCraft, _equipmentType.AmphibiousCraft];\n\n        _equipmentType.AmphibiousCrafts = [_equipmentType.AmphibiousCraft];\n\n        _equipmentType.isInterceptor = function (equipment) {\n            equipment = _equipment(equipment);\n\n            if (equipment.type_ingame && equipment.type_ingame[2] == 47) return !1;\n\n            return _equipmentType.Interceptors.indexOf(equipment.type) > -1;\n        };\n    }\n\n    // 改修收益系数\n    formula.starMultiper = {\n        SmallCalibers: {\n            shelling: 1,\n            night: 1\n        },\n        MediumCalibers: {\n            shelling: 1,\n            night: 1\n        },\n        LargeCalibers: {\n            shelling: 1.5,\n            night: 1\n        },\n        SecondaryGuns: {\n            shelling: 1,\n            night: 1,\n            hit: 1\n        },\n        APShells: {\n            shelling: 1,\n            night: 1\n        },\n        AAFireDirectors: {\n            shelling: 1,\n            night: 1\n        },\n        Searchlights: {\n            shelling: 1,\n            night: 1\n        },\n        AAGuns: {\n            shelling: 1,\n            torpedo: 1.2\n        },\n        Torpedos: {\n            torpedo: 1.2,\n            night: 1\n        },\n        DepthCharges: {\n            shelling: 0.75,\n            antisub: 1\n        },\n        Sonars: {\n            shelling: 0.75,\n            antisub: 1\n        },\n        SmallRadars: {\n            los: 1.25\n        },\n        LargeRadars: {\n            los: 1.4\n        },\n        Seaplanes: {},\n        ReconSeaplanes: {\n            los: 1.2\n        },\n        SeaplaneFighters: {\n            fighter: 0.2\n        },\n        SeaplaneBomber: {\n            // fighter: 0.2\n            los: 1.15\n        },\n        CarrierFighters: {\n            fighter: 0.2\n        },\n        DiveBombers: {\n            fighter: 0.25,\n            night: 1\n        },\n        CarrierRecons: {\n            los: 1.2\n        },\n        LandingCrafts: {\n            shelling: 1,\n            night: 1\n        },\n        Interceptors: {\n            fighter: 0.2\n        },\n\n        _10: {\n            shelling: ['multiplication', 0.2],\n            night: 1\n        },\n        _66: {\n            shelling: ['multiplication', 0.2],\n            night: 1\n            // aa\n            // aaFleet\n        },\n        _220: {\n            shelling: ['multiplication', 0.2],\n            night: 1\n            // aa\n            // aaFleet\n        },\n        _275: {\n            shelling: ['multiplication', 0.2],\n            night: 1\n            // aa\n            // aaFleet\n        },\n        // _247: {\n        //     _type: 'multiplication',\n        //     shelling: 0.3,\n        //     night: 0.3,\n        // },\n        _12: {\n            shelling: ['multiplication', 0.3],\n            night: ['multiplication', 0.3]\n        },\n        _234: {\n            shelling: ['multiplication', 0.3],\n            night: ['multiplication', 0.3]\n        }\n    };\n    // 获取改修加成对象\n    formula.getStarMultiplier = function (equipmentType, statType) {\n        // 如果 equipmentType 以 _ 开头，如 _123，则代表第 123 号装备，而非装备类型\n        if (!formula.starMultiper._init) {\n            var _loop = function _loop(i) {\n                if (_equipmentType[i] && _equipmentType[i].forEach) {\n                    _equipmentType[i].forEach(function (tid) {\n                        formula.starMultiper[tid] = formula.starMultiper[i];\n                    });\n                } else if (typeof _equipmentType[i] === 'number') {\n                    formula.starMultiper[_equipmentType[i]] = formula.starMultiper[i];\n                }\n            };\n\n            for (var i in formula.starMultiper) {\n                _loop(i);\n            }\n            formula.starMultiper._init = !0;\n        }\n        var bonus = formula.starMultiper[equipmentType] || {};\n        if (statType) return bonus[statType] || 0;\n        return bonus;\n    };\n    // 计算改修加成\n    formula.getStarBonus = function (equipment, stat, star) {\n        equipment = _equipment(equipment);\n\n        var _Object$assign = Object.assign({}, formula.getStarMultiplier(equipment.type), formula.starMultiper['_' + equipment.id]),\n            _Object$assign$stat = _Object$assign[stat],\n            bonus = _Object$assign$stat === undefined ? 0 : _Object$assign$stat;\n\n        var bonusType = 'sqrt';\n\n        if (Array.isArray(bonus)) {\n            bonusType = bonus[0];\n            bonus = bonus[1];\n        }\n\n        // const {\n        //     [stat]: bonus = 0,\n        //     _type: bonusType = 'sqrt'\n        // } = typeof formula.starMultiper[`_${equipment.id}`] === 'object'\n        //     ? formula.starMultiper[`_${equipment.id}`]\n        //     : formula.getStarMultiplier(equipment.type)\n        switch (bonusType) {\n            case 'sqrt':\n                {\n                    return bonus * Math.sqrt(star);\n                }\n            case 'multiplication':\n            case 'multiple':\n                {\n                    return bonus * star;\n                }\n        }\n    };\n    // 飞行器熟练度对制空战力的加成\n    formula.getFighterPowerRankMultiper = function (equipment, rank /*, options*/) {\n        equipment = _equipment(equipment);\n\n        var rankInternal = [],\n            typeValue = {};\n\n        rankInternal[0] = [0, 9];\n        rankInternal[1] = [10, 24];\n        rankInternal[2] = [25, 39];\n        rankInternal[3] = [40, 54];\n        rankInternal[4] = [55, 69];\n        rankInternal[5] = [70, 84];\n        rankInternal[6] = [85, 99];\n        rankInternal[7] = [100, 120];\n\n        typeValue.CarrierFighter = [0, 0, 2, 5, 9, 14, 14, 22];\n\n        typeValue.SeaplaneBomber = [0, 0, 1, 1, 1, 3, 3, 6];\n\n        var _rankInternal = rankInternal[rank],\n            _typeValue = 0;\n\n        switch (equipment.type) {\n            case _equipmentType.CarrierFighter:\n            case _equipmentType.CarrierFighterNight:\n            case _equipmentType.Interceptor:\n            case _equipmentType.SeaplaneFighter:\n            case _equipmentType.LandBasedFighter:\n                _typeValue = typeValue.CarrierFighter[rank];\n                break;\n            case _equipmentType.SeaplaneBomber:\n                _typeValue = typeValue.SeaplaneBomber[rank];\n                break;\n        }\n\n        return {\n            min: Math.sqrt(_rankInternal[0] / 10) + _typeValue,\n            max: Math.sqrt(_rankInternal[1] / 10) + _typeValue\n        };\n    };\n    formula.calculate = function (type, ship, equipments_by_slot, star_by_slot, rank_by_slot, options) {\n        /**\r\n         * 计算\r\n         * @param {string} type - 计算类型\r\n         * @param {number || Ship} ship - 舰娘\r\n         * @param {array} equipments_by_slot - 每格装备ID/装备object\r\n         * @param {array} star_by_slot - 每格装备改修星级\r\n         * @param {array} rank_by_slot - 每格装备熟练度\r\n         * @param {object} options - 选项\r\n         */\n        if (!type || !ship) return 0;\n\n        if (!(ship instanceof Ship)) ship = KC.db.ships[ship];\n\n        var result = 0,\n            count = {\n            'main': 0,\n            'secondary': 0,\n            'torpedo': 0,\n            'torpedoLateModel': 0,\n            'seaplane': 0,\n            'apshell': 0,\n            'radar': 0,\n            radarAA: 0,\n            radarSurface: 0,\n            'submarineEquipment': 0,\n            'carrierFighterNight': 0,\n            // 'diveBomberIwai': 0,\n            'torpedoBomberNight': 0,\n            // 'torpedoBomberSwordfish': 0,\n            'aviationPersonnelNight': 0,\n            surfaceShipPersonnel: 0\n        },\n            slots = _slots(ship.slot)\n        // , powerTorpedo = function (options) {\n        //     options = options || {}\n        //     let result = 0\n        //     if (formula.shipType.Carriers.indexOf(ship.type) > -1 && !options.isNight) {\n        //         return options.returnZero ? 0 : -1\n        //     } else {\n        //         result = ship.stat.torpedo_max || 0\n        //         slots.map(function (carry, index) {\n        //             if (equipments_by_slot[index]) {\n        //                 // result += (equipments_by_slot[index].type == _equipmentType.TorpedoBomber && !options.isNight)\n        //                 result += (_equipmentType.TorpedoBombers.indexOf(equipments_by_slot[index].type) > -1 && !options.isNight)\n        //                     ? 0\n        //                     : (equipments_by_slot[index].stat.torpedo || 0)\n\n        //                 // 改修加成\n        //                 if (star_by_slot[index] && !options.isNight) {\n        //                     result += Math.sqrt(star_by_slot[index]) * formula.getStarMultiplier(\n        //                         equipments_by_slot[index].type,\n        //                         'torpedo'\n        //                     )\n        //                 }\n        //             }\n        //         })\n        //         return result\n        //     }\n        //     //return (ship.stat.torpedo_max || 0)\n        // }\n        ,\n            value = 0;\n\n        equipments_by_slot = equipments_by_slot.map(function (equipment) {\n            if (!equipment) return null;\n            if (equipment instanceof Equipment) return equipment;\n            return KC.db.equipments ? KC.db.equipments[equipment] : KC.db.items[equipment];\n        }) || [];\n        star_by_slot = star_by_slot || [];\n        rank_by_slot = rank_by_slot || [];\n        options = options || {};\n\n        equipments_by_slot.forEach(function (equipment) {\n            if (!equipment) return;\n            // 主炮\n            if (_equipmentType.MainGuns.indexOf(equipment.type) > -1) count.main += 1;\n            // 副炮\n            else if (_equipmentType.SecondaryGuns.indexOf(equipment.type) > -1) count.secondary += 1;\n                // 鱼雷\n                else if (_equipmentType.Torpedos.indexOf(equipment.type) > -1) {\n                        count.torpedo += 1;\n                        if (equipment.name.ja_jp.indexOf('後期型') > -1) count.torpedoLateModel += 1;\n                    }\n                    // 水上机\n                    else if (_equipmentType.Seaplanes.indexOf(equipment.type) > -1) count.seaplane += 1;\n                        // 穿甲弹\n                        else if (_equipmentType.APShells.indexOf(equipment.type) > -1) count.apshell += 1;\n                            // 电探/雷达\n                            else if (_equipmentType.Radars.indexOf(equipment.type) > -1) {\n                                    count.radar += 1;\n                                    if (equipment.stat.aa) count.radarAA += 1;\n                                    // else\n                                    if (equipment.stat.hit && equipment.stat.hit >= 3) count.radarSurface += 1;\n                                }\n                                // 潜艇装备\n                                else if (_equipmentType.SubmarineEquipment == equipment.type) count.submarineEquipment += 1;\n                                    // else if (_equipmentType.TorpedoBombers.indexOf(equipment.type) > -1) {\n                                    //     if (equipment.name.ja_jp.indexOf('Swordfish') > -1)\n                                    //         count.torpedoBomberSwordfish += 1\n                                    // }\n                                    // 夜间整备员\n                                    else if (_equipmentType.AviationPersonnels.indexOf(equipment.type) > -1) {\n                                            if (equipment.name.ja_jp.indexOf('夜間') > -1) count.aviationPersonnelNight += 1;\n                                        }\n                                        // else if (_equipmentType.DiveBombers.indexOf(equipment.type) > -1) {\n                                        //     if (equipment.name.ja_jp.indexOf('岩井') > -1)\n                                        //         count.diveBomberIwai += 1\n                                        // }\n                                        // 水上舰要员\n                                        else if (_equipmentType.SurfaceShipPersonnels.indexOf(equipment.type) > -1) count.surfaceShipPersonnel += 1;\n\n            // 夜间飞行器\n            if (equipment.type_ingame) {\n                // 夜间战斗机\n                if (equipment.type_ingame[3] === 45) count.carrierFighterNight += 1;\n                // 夜间轰炸机\n                else if (equipment.type_ingame[3] === 46) count.torpedoBomberNight += 1;\n            }\n        });\n\n        var bonus = calculateBonus(ship, equipments_by_slot, star_by_slot, rank_by_slot);\n\n        var powerTorpedo = function powerTorpedo(options) {\n            return formula.calcByShip.torpedoPower(ship, equipments_by_slot, star_by_slot, rank_by_slot, options, bonus);\n        };\n\n        switch (type) {\n            // 制空战力，装备须为战斗机类型 _equipmentType.Fighters\n            // 计算公式参考 http://bbs.ngacn.cc/read.php?tid=8680767\n            case 'fighterPower':\n                value = 0;\n                slots.map(function (carry, index) {\n                    if (equipments_by_slot[index] && _equipmentType.Fighters.indexOf(equipments_by_slot[index].type) > -1 && carry) {\n                        value = Math.sqrt(carry) * (equipments_by_slot[index].getStat('aa', ship) || 0);\n                        if (_equipmentType.CarrierFighters.includes(equipments_by_slot[index].type)) {\n                            switch (rank_by_slot[index]) {\n                                case 1:case '1':\n                                    value += 1;break;\n                                case 2:case '2':\n                                    value += 4;break;\n                                case 3:case '3':\n                                    value += 6;break;\n                                case 4:case '4':\n                                    value += 11;break;\n                                case 5:case '5':\n                                    value += 16;break;\n                                case 6:case '6':\n                                    value += 17;break;\n                                case 7:case '7':\n                                    value += 25;break;\n                            }\n                        } else if (_equipmentType.Recons.indexOf(equipments_by_slot[index].type) == -1) {\n                            var max_per_slot = equipments_by_slot[index].type == _equipmentType.SeaplaneBomber ? 9 : 3;\n                            value += rank_by_slot[index] == 1 ? 1 : max_per_slot / 6 * (rank_by_slot[index] - 1);\n                        }\n                        result += Math.floor(value);\n                    }\n                });\n                return result;\n            //return Math.floor(result)\n            //break;\n\n            // 同时返回制空战力的上下限\n            // 返回值为Array\n            case 'fighterPower_v2':\n                return formula.calcByShip.fighterPower_v2(ship, equipments_by_slot, star_by_slot, rank_by_slot);\n            //break;\n\n            // 炮击威力，除潜艇外\n            case 'shelling':\n            case 'shellingDamage':\n                if (formula.shipType.Submarines.indexOf(ship.type) > -1) {\n                    return '-';\n                } else {\n                    result = formula.calcByShip.shellingPower(ship, equipments_by_slot, star_by_slot, rank_by_slot, {}, bonus);\n                    if (result && result > -1) return Math.floor(result); // + 5\n                    return '-';\n                }\n            //break;\n\n            // 雷击威力，航母除外\n            case 'torpedo':\n            case 'torpedoDamage':\n                result = powerTorpedo();\n                if (result && result > -1) return Math.floor(result); // + 5\n                return '-';\n            //break;\n\n            // 夜战模式 & 伤害力\n            case 'nightBattle':\n                {\n                    var nightPower = formula.calcByShip.nightPower(ship, equipments_by_slot, star_by_slot, rank_by_slot, {}, count, bonus);\n                    return nightPower.damage <= 0 ? '-' : nightPower.value;\n                    //break;\n                }\n\n            // 命中总和\n            case 'addHit':\n                slots.map(function (carry, index) {\n                    if (equipments_by_slot[index]) result += equipments_by_slot[index].getStat('hit', ship) || 0;\n                });\n                result += bonus.hit || 0;\n                return result >= 0 ? '+' + result : result;\n            //break;\n\n            // 装甲总和\n            case 'addArmor':\n                slots.map(function (carry, index) {\n                    if (equipments_by_slot[index]) result += equipments_by_slot[index].getStat('armor', ship) || 0;\n                });\n                return result + (bonus.armor || 0);\n            //break;\n\n            // 回避总和\n            case 'addEvasion':\n                slots.map(function (carry, index) {\n                    if (equipments_by_slot[index]) result += equipments_by_slot[index].getStat('evasion', ship) || 0;\n                });\n                return result + (bonus.evasion || 0);\n            //break;\n\n            // 索敌能力\n            case 'losPower':\n                return formula.calcByShip.losPower(ship, equipments_by_slot, star_by_slot, rank_by_slot, options);\n            //break;\n            default:\n                return formula.calcByShip[type](ship, equipments_by_slot, star_by_slot, rank_by_slot, options, bonus);\n            //break;\n        }\n\n        //return '-'\n    };\n    // 计算快捷方式\n    formula.shellingDamage = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('shellingDamage', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.torpedoDamage = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('torpedoDamage', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.fighterPower = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('fighterPower', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.fighterPower_v2 = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('fighterPower_v2', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.nightBattle = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('nightBattle', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.addHit = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('addHit', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.addArmor = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('addArmor', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.addEvasion = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        return this.calculate('addEvasion', ship, equipments_by_slot, star_by_slot, rank_by_slot);\n    };\n    formula.losPower = function (ship, equipments_by_slot, star_by_slot, rank_by_slot, options) {\n        return this.calculate('losPower', ship, equipments_by_slot, star_by_slot, rank_by_slot, options);\n    };\n    // Formulas\n    formula.calc.losPower = function (data) {\n        // http://biikame.hatenablog.com/entry/2014/11/14/224925\n\n        var calc = function calc(x) {\n            if (typeof x['(Intercept)'] == 'undefined') x['(Intercept)'] = 1;\n            x.hqLv = Math.ceil(x.hqLv / 5) * 5;\n            var x_estimate = {};\n            var y_estimate = 0;\n            var x_std_error = {};\n            var y_std_error = 0;\n            keys.forEach(function (key) {\n                var estimate = x[key] * estimate_coefficients[key];\n                x_estimate[key] = estimate;\n                y_estimate += estimate;\n                x_std_error[key] = x[key] * std_error_coefficients[key];\n            });\n            keys.forEach(function (key) {\n                keys.forEach(function (key2) {\n                    y_std_error += x_std_error[key] * x_std_error[key2] * correlation[key][key2];\n                });\n            });\n            return {\n                x_estimate: x_estimate,\n                y_estimate: y_estimate,\n                x_std_error: x_std_error,\n                y_std_error: y_std_error\n            };\n        };\n        var keys = ['(Intercept)', 'DiveBombers', 'TorpedoBombers', 'CarrierRecons', 'SeaplaneRecons', 'SeaplaneBombers', 'SmallRadars', 'LargeRadars', 'Searchlights', 'statLos', 'hqLv'];\n        var estimate_coefficients = {\n            '(Intercept)': 0,\n            'DiveBombers': 1.03745043134563,\n            'TorpedoBombers': 1.3679056374142,\n            'CarrierRecons': 1.65940512636315,\n            'SeaplaneRecons': 2,\n            'SeaplaneBombers': 1.77886368594467,\n            'SmallRadars': 1.0045778494921,\n            'LargeRadars': 0.990738063979571,\n            'Searchlights': 0.906965144360512,\n            'statLos': 1.6841895400986,\n            'hqLv': -0.614246711531445\n        };\n        var std_error_coefficients = {\n            '(Intercept)': 4.66445565766347,\n            'DiveBombers': 0.0965028505325845,\n            'TorpedoBombers': 0.108636184978525,\n            'CarrierRecons': 0.0976055279516298,\n            'SeaplaneRecons': 0.0866229392463539,\n            'SeaplaneBombers': 0.0917722496848294,\n            'SmallRadars': 0.0492773648320346,\n            'LargeRadars': 0.0491221486053861,\n            'Searchlights': 0.0658283797225724,\n            'statLos': 0.0781594211213618,\n            'hqLv': 0.0369222352426548\n        };\n        var correlation = {\n            '(Intercept)': {\n                '(Intercept)': 1,\n                'DiveBombers': -0.147020064768061,\n                'TorpedoBombers': -0.379236131621529,\n                'CarrierRecons': -0.572858669501918,\n                'SeaplaneRecons': -0.733913857017495,\n                'SeaplaneBombers': -0.642621825152428,\n                'SmallRadars': -0.674829588068364,\n                'LargeRadars': -0.707418111752863,\n                'Searchlights': -0.502304601556193,\n                'statLos': -0.737374218573832,\n                'hqLv': -0.05071933950163\n            },\n            'DiveBombers': {\n                '(Intercept)': -0.147020064768061,\n                'DiveBombers': 1,\n                'TorpedoBombers': 0.288506347076736,\n                'CarrierRecons': 0.365820372770994,\n                'SeaplaneRecons': 0.425744409856409,\n                'SeaplaneBombers': 0.417783698791503,\n                'SmallRadars': 0.409046013184429,\n                'LargeRadars': 0.413855653833994,\n                'Searchlights': 0.308730607324667,\n                'statLos': 0.317984916914851,\n                'hqLv': -0.386740224500626\n            },\n            'TorpedoBombers': {\n                '(Intercept)': -0.379236131621529,\n                'DiveBombers': 0.288506347076736,\n                'TorpedoBombers': 1,\n                'CarrierRecons': 0.482215071254241,\n                'SeaplaneRecons': 0.584455876852325,\n                'SeaplaneBombers': 0.558515133495825,\n                'SmallRadars': 0.547260012897553,\n                'LargeRadars': 0.560437619378443,\n                'Searchlights': 0.437934879351188,\n                'statLos': 0.533934507932748,\n                'hqLv': -0.405349979885748\n            },\n            'CarrierRecons': {\n                '(Intercept)': -0.572858669501918,\n                'DiveBombers': 0.365820372770994,\n                'TorpedoBombers': 0.482215071254241,\n                'CarrierRecons': 1,\n                'SeaplaneRecons': 0.804494553748065,\n                'SeaplaneBombers': 0.75671307047535,\n                'SmallRadars': 0.748420581669228,\n                'LargeRadars': 0.767980338133817,\n                'Searchlights': 0.589651513349878,\n                'statLos': 0.743851348255527,\n                'hqLv': -0.503544281376776\n            },\n            'SeaplaneRecons': {\n                '(Intercept)': -0.733913857017495,\n                'DiveBombers': 0.425744409856409,\n                'TorpedoBombers': 0.584455876852325,\n                'CarrierRecons': 0.804494553748065,\n                'SeaplaneRecons': 1,\n                'SeaplaneBombers': 0.932444440578382,\n                'SmallRadars': 0.923988080549326,\n                'LargeRadars': 0.94904944359066,\n                'Searchlights': 0.727912987329348,\n                'statLos': 0.944434077970518,\n                'hqLv': -0.614921413821462\n            },\n            'SeaplaneBombers': {\n                '(Intercept)': -0.642621825152428,\n                'DiveBombers': 0.417783698791503,\n                'TorpedoBombers': 0.558515133495825,\n                'CarrierRecons': 0.75671307047535,\n                'SeaplaneRecons': 0.932444440578382,\n                'SeaplaneBombers': 1,\n                'SmallRadars': 0.864289865445084,\n                'LargeRadars': 0.886872388674911,\n                'Searchlights': 0.68310647756898,\n                'statLos': 0.88122333327317,\n                'hqLv': -0.624797255805045\n            },\n            'SmallRadars': {\n                '(Intercept)': -0.674829588068364,\n                'DiveBombers': 0.409046013184429,\n                'TorpedoBombers': 0.547260012897553,\n                'CarrierRecons': 0.748420581669228,\n                'SeaplaneRecons': 0.923988080549326,\n                'SeaplaneBombers': 0.864289865445084,\n                'SmallRadars': 1,\n                'LargeRadars': 0.872011318623459,\n                'Searchlights': 0.671926570242336,\n                'statLos': 0.857213501657084,\n                'hqLv': -0.560018086758868\n            },\n            'LargeRadars': {\n                '(Intercept)': -0.707418111752863,\n                'DiveBombers': 0.413855653833994,\n                'TorpedoBombers': 0.560437619378443,\n                'CarrierRecons': 0.767980338133817,\n                'SeaplaneRecons': 0.94904944359066,\n                'SeaplaneBombers': 0.886872388674911,\n                'SmallRadars': 0.872011318623459,\n                'LargeRadars': 1,\n                'Searchlights': 0.690102027588321,\n                'statLos': 0.883771367337743,\n                'hqLv': -0.561336967269448\n            },\n            'Searchlights': {\n                '(Intercept)': -0.502304601556193,\n                'DiveBombers': 0.308730607324667,\n                'TorpedoBombers': 0.437934879351188,\n                'CarrierRecons': 0.589651513349878,\n                'SeaplaneRecons': 0.727912987329348,\n                'SeaplaneBombers': 0.68310647756898,\n                'SmallRadars': 0.671926570242336,\n                'LargeRadars': 0.690102027588321,\n                'Searchlights': 1,\n                'statLos': 0.723228553177704,\n                'hqLv': -0.518427865593732\n            },\n            'statLos': {\n                '(Intercept)': -0.737374218573832,\n                'DiveBombers': 0.317984916914851,\n                'TorpedoBombers': 0.533934507932748,\n                'CarrierRecons': 0.743851348255527,\n                'SeaplaneRecons': 0.944434077970518,\n                'SeaplaneBombers': 0.88122333327317,\n                'SmallRadars': 0.857213501657084,\n                'LargeRadars': 0.883771367337743,\n                'Searchlights': 0.723228553177704,\n                'statLos': 1,\n                'hqLv': -0.620804120587684\n            },\n            'hqLv': {\n                '(Intercept)': -0.05071933950163,\n                'DiveBombers': -0.386740224500626,\n                'TorpedoBombers': -0.405349979885748,\n                'CarrierRecons': -0.503544281376776,\n                'SeaplaneRecons': -0.614921413821462,\n                'SeaplaneBombers': -0.624797255805045,\n                'SmallRadars': -0.560018086758868,\n                'LargeRadars': -0.561336967269448,\n                'Searchlights': -0.518427865593732,\n                'statLos': -0.620804120587684,\n                'hqLv': 1\n            }\n        };\n\n        var x = {\n            'DiveBombers': 0,\n            'TorpedoBombers': 0,\n            'CarrierRecons': 0,\n            'SeaplaneRecons': 0,\n            'SeaplaneBombers': 0,\n            'SmallRadars': 0,\n            'LargeRadars': 0,\n            'Searchlights': 0,\n            'statLos': 1,\n            'hqLv': 1\n        };\n\n        for (var i in data) {\n            x[i] = data[i];\n        }\n\n        return calc(x);\n        //var result = calc(x);\n        //var score = result.y_estimate.toFixed(1) + ' ± ' + result.y_std_error.toFixed(1);\n    };\n    formula.calc.los33 = function (data) {\n        if (!data) return;\n        /* data {\r\n            hq: 90,\r\n            equipments: [\r\n                {\r\n                    id: 123,\r\n                    star: 4,\r\n                    rank: 7\r\n                }\r\n            ],\r\n            ships: [\r\n                {\r\n                    id: 123,\r\n                    lv: 90\r\n                }\r\n            ]\r\n        }\r\n         */\n\n        var totalEquipmentValue = 0,\n            totalShipValue = 0;\n\n        var equipmentTypeValues = {\n            TorpedoBombers: 0.8,\n            CarrierRecons: 1,\n\n            ReconSeaplane: 1.2,\n            ReconSeaplaneNight: 1.2,\n            SeaplaneBomber: 1.1\n        };\n        Object.defineProperty(equipmentTypeValues, 'default', {\n            value: 0.6,\n            enumerable: !1,\n            configurable: !1,\n            writable: !1\n        });\n\n        data.equipments.forEach(function (o) {\n            if (o.id) {\n                var equipment = _equipment(o.id);\n\n                if (equipment.stat.los) {\n                    var typeValue = equipmentTypeValues.default;\n                    var star = o.star || 0;\n\n                    for (var types in equipmentTypeValues) {\n                        var typesForCheck = [];\n\n                        if (Array.isArray(_equipmentType[types])) typesForCheck = _equipmentType[types];else typesForCheck = [_equipmentType[types]];\n\n                        if (typesForCheck.indexOf(equipment.type) > -1) typeValue = equipmentTypeValues[types];\n                    }\n\n                    totalEquipmentValue += typeValue * (equipment.stat.los + formula.getStarBonus(equipment, 'los', star)\n                    // + formula.getStarMultiplier(equipment.type, 'los') * Math.sqrt(star)\n                    );\n                }\n            }\n        });\n\n        data.ships.forEach(function (o) {\n            var ship = _ship(o.id);\n            var shipLOS = ship.getAttribute('los', Math.max(o.lv || 1, ship.getMinLv()));\n\n            totalShipValue += Math.sqrt(Math.max(shipLOS, 1));\n        });\n\n        return totalEquipmentValue + totalShipValue - Math.ceil(data.hq * 0.4) + 2 * (6 - data.ships.length);\n    };\n    formula.calc.TP = function (count) {\n        /* count\r\n        * {\r\n        * \t\tship: {\r\n        * \t\t\tdd\r\n        * \t\t\tcl\r\n        * \t\t\tct\r\n        * \t\t\tcav\r\n        * \t\t\tbbv\r\n        * \t\t\tav\r\n        * \t\t\tssv\r\n        * \t\t\tlha\r\n        * \t\t\tao\r\n        * \t\t\tas\r\n        * \t\t},\r\n        * \t\tequipment: {\r\n        * \t\t\t68\t// landing craft\r\n        * \t\t\t75  // canister\r\n        * \t\t\t166  // landing craft (force)\r\n        * \t\t}\r\n        * }\r\n        */\n        count = count || {};\n        var result = 0,\n            ship = count.ship || {},\n            equipment = count.equipment || {};\n\n        for (var i in ship) {\n            var multiper = 0;\n            switch (i) {\n                case 1:\n                case '1':\n                case 19:\n                case '19':\n                case 'dd':\n                    multiper = 5;break;\n\n                case 2:\n                case '2':\n                case 28:\n                case '28':\n                case 'cl':\n                    multiper = 2;break;\n\n                case 21:\n                case '21':\n                case 'ct':\n                    multiper = 6;break;\n\n                case 5:\n                case '5':\n                case 'cav':\n                    multiper = 4;break;\n\n                case 8:\n                case '8':\n                case 'bbv':\n                    multiper = 7;break;\n\n                case 12:\n                case '12':\n                case 24:\n                case '24':\n                case 'av':\n                    multiper = 9.5;break;\n\n                case 14:\n                case '14':\n                case 'ssv':\n                    multiper = 1;break;\n\n                case 15:\n                case '15':\n                case 'lha':\n                    multiper = 12;break;\n\n                case 29:\n                case '29':\n                case 'ao':\n                    multiper = 15;break;\n\n                case 17:\n                case '17':\n                case 'as':\n                    multiper = 7;break;\n            }\n            result += multiper * (parseInt(ship[i]) || 0);\n        }\n\n        for (var _i in equipment) {\n            var _multiper = 0,\n                id = parseInt(_i),\n                data = void 0;\n            switch (id) {\n                // 戦闘糧食\n                case 145:\n                    _multiper = 1;break;\n                // 秋刀魚の缶詰\n                case 150:\n                    _multiper = 1;break;\n                // canister\n                case 75:\n                    _multiper = 5;break;\n                // landing craft\n                case 68:\n                    _multiper = 8;break;\n                // landing craft (large)\n                case 193:\n                    _multiper = 8;break;\n                // landing craft (force)\n                case 166:\n                    _multiper = 8;break;\n                // 特二式内火艇\n                case 167:\n                    _multiper = 2;break;\n                default:\n                    // 瑞云 & 晴岚\n                    data = _equipment(id);\n                    switch (data.type) {\n                        // case formula.equipmentType.SeaplaneBomber:\n                        //     if( data.name.ja_jp.indexOf('瑞雲') > -1 )\n                        //         multiper = 2\n                        //     else if( data.name.ja_jp.indexOf('晴嵐') > -1 )\n                        //         multiper = 4\n                        //     break;\n                        case formula.equipmentType.LandingCraft:\n                            if (data.name.ja_jp.indexOf('大発動艇') > -1) _multiper = 8;\n                            break;\n                    }\n            }\n            result += _multiper * (parseInt(equipment[_i]) || 0);\n        }\n\n        return result;\n    };\n    formula.calc.fighterPower = function (equipment, carry, rank, star) {\n        if (!equipment) return [0, 0];\n\n        equipment = equipment instanceof Equipment ? equipment : KC.db.equipments ? KC.db.equipments[equipment] : KC.db.items[equipment];\n        carry = carry || 0;\n        rank = rank || 0;\n        star = star || 0;\n\n        // http://bbs.ngacn.cc/read.php?tid=8680767\n        // http://ja.kancolle.wikia.com/wiki/%E8%89%A6%E8%BC%89%E6%A9%9F%E7%86%9F%E7%B7%B4%E5%BA%A6\n\n        var results = [0, 0];\n\n        if (_equipmentType.Fighters.indexOf(equipment.type) > -1 && carry) {\n            // Math.floor(Math.sqrt(carry) * (equipment.stat.aa || 0) + Math.sqrt( rankInternal / 10 ) + typeValue)\n            // if( star ) console.log( equipment._name, '★+' + star, star * formula.getStarMultiplier( equipment.type, 'fighter' ) )\n            var statAA = (equipment.stat.aa || 0) + (_equipmentType.isInterceptor(equipment) ? equipment.stat.evasion * 1.5 : 0) + star * formula.getStarMultiplier(equipment.type, 'fighter'),\n                base = statAA * Math.sqrt(carry),\n                rankBonus = formula.getFighterPowerRankMultiper(equipment, rank);\n\n            results[0] += Math.floor(base + rankBonus.min);\n            results[1] += Math.floor(base + rankBonus.max);\n        }\n\n        return results;\n    };\n    formula.calc.fighterPowerAA = function (equipment, carry, rank, star) {\n        if (!equipment) return [0, 0];\n\n        equipment = _equipment(equipment);\n        carry = carry || 0;\n        rank = rank || 0;\n        star = star || 0;\n\n        // http://wikiwiki.jp/kancolle/?%B4%F0%C3%CF%B9%D2%B6%F5%C2%E2#AirSupremacy\n\n        var results = [0, 0];\n\n        if (carry) {\n            var statAA = (equipment.stat.aa || 0) + (_equipmentType.isInterceptor(equipment) ? equipment.stat.evasion : 0) + (_equipmentType.isInterceptor(equipment) ? equipment.stat.hit * 2 : 0) + star * formula.getStarMultiplier(equipment.type, 'fighter'),\n                base = statAA * Math.sqrt(carry),\n                rankBonus = formula.getFighterPowerRankMultiper(equipment, rank, {\n                isAA: !0\n            });\n\n            results[0] += Math.floor(base + rankBonus.min);\n            results[1] += Math.floor(base + rankBonus.max);\n        }\n\n        return results;\n    };\n    // Calculate by Ship\n    formula.calcByShip.shellingPower = function (ship, equipments_by_slot, star_by_slot, rank_by_slot, options, bonus) {\n        options = options || {};\n        bonus = bonus || calculateBonus(ship, equipments_by_slot, star_by_slot, rank_by_slot);\n\n        var result = 0,\n            isCV = !1,\n            slots = _slots(ship.slot);\n\n        // 检查是否为航母攻击模式\n        if (formula.shipType.Carriers.indexOf(ship.type) > -1) {\n            isCV = !0;\n        } else {\n            //equipments_by_slot.forEach(function(equipment){\n            //\tif( equipment && !isCV && _equipmentType.CarrierBased.indexOf( equipment.type ) > -1 )\n            //\t\tisCV = true\n            //})\n            equipments_by_slot.some(function (equipment) {\n                if (equipment && !isCV && _equipmentType.CarrierBased.indexOf(equipment.type) > -1) {\n                    isCV = !0;\n                    return !0;\n                }\n            });\n        }\n\n        if (isCV && !options.isNight) {\n            // 航母攻击模式\n            var torpedoDamage = 0,\n                bombDamage = 0;\n            slots.map(function (carry, index) {\n                if (equipments_by_slot[index]) {\n                    var equipment = equipments_by_slot[index];\n                    // result += (equipment.stat.fire * 1.5) || 0\n                    result += equipment.getStat('fire', ship) * 1.5 || 0;\n\n                    // if (equipment.type == _equipmentType.TorpedoBomber)\n                    if (_equipmentType.TorpedoBombers.indexOf(equipment.type) > -1)\n                        // torpedoDamage += equipment.stat.torpedo || 0\n                        torpedoDamage += equipment.getStat('torpedo', ship) || 0;\n\n                    //if( equipment.type == _equipmentType.DiveBomber )\n                    // bombDamage += equipment.stat.bomb || 0\n                    bombDamage += equipment.getStat('bomb', ship) || 0;\n\n                    if (_equipmentType.SecondaryGuns.indexOf(equipment.type) > -1) result += Math.sqrt((star_by_slot[index] || 0) * 1.5);\n                }\n            });\n            if (!torpedoDamage && !bombDamage) return -1;else result += Math.floor(1.5 * (Math.floor(bombDamage * 1.3) + torpedoDamage + ship.stat.fire_max + (bonus.fire || 0))) + 50;\n            return result;\n        } else {\n            // 其他舰种\n            result = ship.stat.fire_max || 0;\n\n            // 特定种类装备数量，仅在满足对特定条件时才会纳入数量统计\n            var count = {\n                CLMainGunNaval: 0, // 轻巡系主炮（单装炮）\n                CLMainGunTwin: 0, // 轻巡系主炮（连装炮）\n                ItalianCAMainGun: 0 // 意大利重巡主炮（仅对意大利重巡洋舰生效）\n            };\n            slots.map(function (carry, index) {\n                if (equipments_by_slot[index]) {\n                    var equipment = equipments_by_slot[index];\n                    // result += equipment.stat.fire || 0\n                    result += equipment.getStat('fire', ship) || 0;\n\n                    // 轻巡系主炮加成\n                    if (formula.shipType.LightCruisers.indexOf(ship.type) > -1) {\n                        ['14cm単装砲', '15.2cm単装砲'].forEach(function (name) {\n                            // console.log(\n                            //     name,\n                            //     equipment.name.ja_jp,\n                            //     equipment.name.ja_jp.includes(name)\n                            // );\n                            if (equipment.name.ja_jp.includes(name)) count.CLMainGunNaval += 1;\n                        });\n                        ['14cm連装砲', '15.2cm連装砲'].forEach(function (name) {\n                            if (equipment.name.ja_jp.includes(name)) count.CLMainGunTwin += 1;\n                        });\n                    }\n\n                    // 意大利重巡主炮加成\n                    if (ship._navy === 'rm') {\n                        // console.log(ship, equipment)\n                        if (equipment.name.ja_jp.includes('203mm/53')) count.ItalianCAMainGun += 1;\n                    }\n\n                    // 改修加成\n                    if (star_by_slot[index] && !options.isNight) {\n                        /*\r\n                        console.log(\r\n                            equipments_by_slot[index]._name,\r\n                            '★+' + star_by_slot[index],\r\n                            formula.getStarMultiplier(\r\n                                equipments_by_slot[index].type,\r\n                                options.isNight ? 'night' : 'shelling'\r\n                            ),\r\n                            Math.sqrt(star_by_slot[index]) * formula.getStarMultiplier(\r\n                                equipments_by_slot[index].type,\r\n                                options.isNight ? 'night' : 'shelling'\r\n                            ),\r\n                            options.isNight ? '夜战' : '昼战'\r\n                        )\r\n                        */\n                        result += formula.getStarBonus(equipment, 'shelling', star_by_slot[index]);\n                        // result += Math.sqrt(star_by_slot[index]) * formula.getStarMultiplier(\n                        //     equipment.type,\n                        //     'shelling'\n                        // )\n                    }\n                }\n            });\n\n            // console.log(count)\n\n            // 加成\n            var thisBonus = 0\n            // 轻巡系主炮加成\n            + 2 * Math.sqrt(count.CLMainGunTwin) + Math.sqrt(count.CLMainGunNaval)\n            // 意大利重巡主炮加成（仅对意大利重巡洋舰生效）\n            + Math.sqrt(count.ItalianCAMainGun) + (bonus.fire || 0);\n\n            return result + thisBonus;\n        }\n        //return (ship.stat.fire_max || 0)\n    };\n    formula.calcByShip.torpedoPower = function (ship, equipments_by_slot, star_by_slot, rank_by_slot, options, bonus) {\n        options = options || {};\n        bonus = bonus || calculateBonus(ship, equipments_by_slot, star_by_slot, rank_by_slot);\n\n        var result = 0;\n        var slots = _slots(ship.slot);\n\n        if (formula.shipType.Carriers.indexOf(ship.type) > -1 && !options.isNight) {\n            return options.returnZero ? 0 : -1;\n        } else {\n            result = (ship.stat.torpedo_max || 0) + (bonus.torpedo || 0);\n            slots.map(function (carry, index) {\n                if (equipments_by_slot[index]) {\n                    var equipment = equipments_by_slot[index];\n                    // result += (equipment.type == _equipmentType.TorpedoBomber && !options.isNight)\n                    result += _equipmentType.TorpedoBombers.indexOf(equipment.type) > -1 && !options.isNight ? 0 : equipment.getStat('torpedo', ship) || 0;\n\n                    // 改修加成\n                    if (star_by_slot[index] && !options.isNight) {\n                        result += formula.getStarBonus(equipment, 'torpedo', star_by_slot[index]);\n                        // result += Math.sqrt(star_by_slot[index]) * formula.getStarMultiplier(\n                        //     equipment.type,\n                        //     'torpedo'\n                        // )\n                    }\n                }\n            });\n            return result;\n        }\n    };\n    formula.calcByShip.nightPower = function (ship, equipments_by_slot, star_by_slot, rank_by_slot, options, count, bonus) {\n        options = options || {};\n        bonus = bonus || calculateBonus(ship, equipments_by_slot, star_by_slot, rank_by_slot);\n\n        var result = {\n            // value: ''\n            // type: undefined,\n            damage: 0\n\n            // 改修加成\n        };var starBonus = 0;\n        var slots = _slots(ship.slot);\n\n        // 航空夜战\n        // http://bbs.ngacn.cc/read.php?tid=12445064\n        // http://bbs.ngacn.cc/read.php?tid=12590487\n        if ((count.aviationPersonnelNight || ship.getCapability('count_as_night_operation_aviation_personnel')) && (count.carrierFighterNight >= 1 || count.torpedoBomberNight >= 1)) {\n            // (裸火力+特殊机体火力+特殊机体雷装+3*sum(夜战机体格子剩余机数)+sum(特殊机体系数*sqrt(特殊机体格子剩余机数))+夜间接触补正+特殊机体改修补正)*CI系数\n            // 夜战机体：F6F-3N，F6F-5N，TBM-3D\n            // 特殊机体：所有夜战机体，剑鱼系，零战62型(爆战/岩井队)\n\n            // 基本攻击力 = 素火力 + ∑(夜间飞机火力)※ +∑(夜间飞机雷装)※ + ∑(夜间飞机搭载补正) + 夜间接触补正\n            // 夜间飞机搭载补正 = 系数A*机数 + 系数B*(火力+雷装+爆装+对潜)*√(机数) + √(★)\n\n            slots.forEach(function (carry, index) {\n                if (!equipments_by_slot[index]) return;\n\n                if (star_by_slot[index]) {\n                    starBonus += formula.getStarBonus(equipments_by_slot[index], 'night', star_by_slot[index]);\n                    // starBonus += Math.sqrt(star_by_slot[index]) * formula.getStarMultiplier(\n                    //     equipments_by_slot[index].type,\n                    //     'night'\n                    // )\n                }\n            });\n\n            var nightCarry = 0; // 夜战机体机数\n            var spFire = 0; // 特殊机体火力\n            var spTorpedo = 0; // 特殊机体雷装\n            var spBonus = 0; // sum(特殊机体系数*sqrt(特殊机体机数))\n            var spStarBonus = 0; // 特殊机体改修补正\n            var multiplierCI = [];\n            // let hasAttacker = false\n\n            var countTorpedoBomberSwordfish = 0;\n            var countDiveBomberIwai = 0;\n\n            slots.forEach(function (carry, index) {\n                if (!equipments_by_slot[index]) return;\n\n                var equipment = equipments_by_slot[index];\n                var isNightAircraft = !1; // 是否为夜战机\n                var isSPAircraft = !1; // 是否为特殊机\n\n                if (equipment.type_ingame) {\n                    // 夜战\n                    if (equipment.type_ingame[3] === 45) {\n                        isSPAircraft = !0;\n                        isNightAircraft = !0;\n                    }\n                    // 夜攻\n                    else if (equipment.type_ingame[3] === 46) {\n                            isSPAircraft = !0;\n                            isNightAircraft = !0;\n                        }\n                }\n                if (_equipmentType.TorpedoBombers.indexOf(equipment.type) > -1) {\n                    if (equipment.hasName('Swordfish', 'ja_jp')) {\n                        isSPAircraft = !0;\n                        countTorpedoBomberSwordfish++;\n                    }\n                } else if (_equipmentType.DiveBombers.indexOf(equipment.type) > -1) {\n                    if (equipment.hasName('岩井', 'ja_jp')) {\n                        isSPAircraft = !0;\n                        countDiveBomberIwai++;\n                    }\n                }\n                // if (\n                //     _equipmentType.Aircrafts.indexOf(equipment.type) > -1\n                //     && (\n                //         equipment.stat.bomb\n                //         || equipment.stat.torpedo\n                //     )\n                // ) hasAttacker = true\n\n                if (isNightAircraft) {\n                    nightCarry += carry;\n                }\n\n                if (isSPAircraft) {\n                    spFire += equipment.getStat('fire', ship);\n                    spTorpedo += equipment.getStat('torpedo', ship);\n                    spBonus += Math.sqrt(carry) * ((3 + 1.5 * (isNightAircraft ? 1 : 0)) * (equipment.getStat('fire', ship) + equipment.getStat('torpedo', ship) + equipment.getStat('bomb', ship) + equipment.getStat('asw', ship)) / 10);\n                    if (star_by_slot[index]) {\n                        spStarBonus += formula.getStarBonus(equipments_by_slot[index], 'night', star_by_slot[index]);\n                        // spStarBonus += Math.sqrt(star_by_slot[index]) * formula.getStarMultiplier(\n                        //     equipments_by_slot[index].type,\n                        //     'night'\n                        // )\n                    }\n                }\n            });\n\n            // if (!hasAttacker) return { damage: 0 }\n\n            var equipSPBomber = countTorpedoBomberSwordfish + countDiveBomberIwai;\n            if (count.carrierFighterNight >= 2 && count.torpedoBomberNight >= 1) multiplierCI.push(1.25);\n            if (count.carrierFighterNight >= 1 && count.torpedoBomberNight >= 1) multiplierCI.push(1.2);\n            if (count.carrierFighterNight >= 3 || count.carrierFighterNight >= 2 && equipSPBomber >= 1 || count.carrierFighterNight >= 1 && count.torpedoBomberNight >= 1 && equipSPBomber >= 1 || count.carrierFighterNight >= 1 && count.torpedoBomberNight >= 2 || count.carrierFighterNight >= 1 && equipSPBomber >= 2) multiplierCI.push(1.18);\n\n            result.type = '航空';\n            result.hit = 1;\n            result.damage = Math.floor(ship.stat.fire_max + (bonus.fire || 0) + spFire + spTorpedo + 3 * nightCarry + spBonus + spStarBonus);\n            result.isMax = !0;\n\n            if (multiplierCI.length) {\n                result.cis = multiplierCI.map(function (multiplier) {\n                    return [Math.floor(result.damage * multiplier), 1];\n                });\n                // result.damage_ci = Math.floor(result.damage * CI)\n            }\n        }\n\n        // Ark Royal：剑鱼夜战\n        else if (ship.getCapability('participate_night_battle_when_equip_swordfish')) {\n                result.damage += ship.stat.fire_max + (bonus.fire || 0) + ship.stat.torpedo_max + (bonus.torpedo || 0);\n                slots.forEach(function (carry, index) {\n                    var equipment = equipments_by_slot[index];\n                    if (!equipments_by_slot[index]) return;\n                    if (_equipmentType.TorpedoBombers.indexOf(equipment.type) > -1) {\n                        if (equipment.name.ja_jp.indexOf('Swordfish') > -1) {\n                            // result.damage += equipment.stat.fire + equipment.stat.torpedo\n                            result.damage += equipment.getStat('fire', ship) + equipment.getStat('torpedo', ship);\n                        }\n                    }\n                });\n                result.type = '通常';\n                result.damage = Math.floor(result.damage);\n                result.hit = 1;\n            }\n\n            // Base rule: If a ships has either Fire or Torpedo stat on level 1, she can participate night battle\n\n            else if (ship.stat.fire + ship.stat.torpedo <= 0)\n                    // if (!ship.additional_night_shelling && formula.shipType.Carriers.indexOf(ship.type) > -1) {\n                    // 航母没有夜战\n                    return {\n                        damage: 0\n\n                        // 其他夜战方式\n                    };else {\n                    var equipmentCount = {};\n                    slots.forEach(function (carry, index) {\n                        if (!equipments_by_slot[index]) return;\n\n                        if (star_by_slot[index]) {\n                            starBonus += formula.getStarBonus(equipments_by_slot[index], 'night', star_by_slot[index]);\n                            // starBonus += Math.sqrt(star_by_slot[index]) * formula.getStarMultiplier(\n                            //     equipments_by_slot[index].type,\n                            //     'night'\n                            // )\n                        }\n\n                        if (!equipments_by_slot[index]) return;\n                        var equipment = equipments_by_slot[index];\n                        if (!equipmentCount[equipment.id]) equipmentCount[equipment.id] = 1;else equipmentCount[equipment.id]++;\n                    });\n\n                    //console.log(count)\n                    result.damage = formula.calcByShip.shellingPower(ship, equipments_by_slot, star_by_slot, rank_by_slot, {\n                        isNight: !0\n                    }, bonus) + formula.calcByShip.torpedoPower(ship, equipments_by_slot, star_by_slot, rank_by_slot, {\n                        isNight: !0, returnZero: !0\n                    }, bonus) + starBonus;\n                    /*\r\n                    console.log(\r\n                        '夜',\r\n                        formula.calcByShip.shellingPower(ship, equipments_by_slot, star_by_slot, rank_by_slot, {isNight: true}),\r\n                        powerTorpedo({isNight: true, returnZero: true}),\r\n                        result.damage\r\n                    )\r\n                    */\n                    // http://wikiwiki.jp/kancolle/?%C0%EF%C6%AE%A4%CB%A4%C4%A4%A4%A4%C6#NightBattle\n                    // console.log(\n                    //     count,\n                    //     formula.shipType.Submarines.indexOf(ship.type)\n                    // )\n\n                    // 潜艇专用\n                    if (formula.shipType.Submarines.indexOf(ship.type) > -1 && count.torpedoLateModel >= 1 && count.submarineEquipment >= 1) {\n                        result.type = '雷击CI';\n                        result.damage = Math.floor(result.damage * 1.75);\n                        result.hit = 2;\n                    }\n\n                    // 潜艇专用\n                    else if (formula.shipType.Submarines.indexOf(ship.type) > -1 && count.torpedoLateModel >= 2) {\n                            result.type = '雷击CI';\n                            result.damage = Math.floor(result.damage * 1.6);\n                            result.hit = 2;\n                        } else if (count.torpedo >= 2) {\n                            result.type = '雷击CI';\n                            result.damage = Math.floor(result.damage * 1.5);\n                            result.hit = 2;\n                        } else if (count.main >= 3) {\n                            result.type = '炮击CI';\n                            result.damage = Math.floor(result.damage * 2);\n                            result.hit = 1;\n                        } else if (count.main == 2 && count.secondary >= 1) {\n                            result.type = '炮击CI';\n                            result.damage = Math.floor(result.damage * 1.75);\n                            result.hit = 1;\n                        }\n\n                        // 驱逐舰专用 - 鱼雷+水上电探+瞭望员\n                        else if (formula.shipType.Destroyers.indexOf(ship.type) > -1 && count.torpedo >= 1 && count.radarSurface >= 1 && count.surfaceShipPersonnel >= 1) {\n                                result.type = '电探CI';\n                                result.damage = Math.floor(result.damage * 1.25);\n                                result.hit = 1;\n                                // result.isMin = true\n                            }\n\n                            // 驱逐舰专用 - 主炮+鱼雷+水上电探\n                            else if (formula.shipType.Destroyers.indexOf(ship.type) > -1 && count.torpedo >= 1 && count.radarSurface >= 1 && count.main >= 1) {\n                                    // [267] 12.7cm連装砲D型改二\n                                    result.type = '电雷CI';\n                                    result.damage = equipmentCount[267] ? Math.floor(result.damage * 1.625) : Math.floor(result.damage * 1.3);\n                                    result.hit = 1;\n                                    // result.isMin = true\n                                }\n\n                                // \n                                else if (count.main >= 1 && count.torpedo == 1) {\n                                        result.type = '炮雷CI';\n                                        result.damage = Math.floor(result.damage * 1.3);\n                                        result.hit = 2;\n                                    }\n\n                                    // 标准连击\n                                    else if (count.main == 2 && count.secondary <= 0 && count.torpedo <= 0 || count.main == 1 && count.secondary >= 1 && count.torpedo <= 0 || count.main == 0 && count.secondary >= 2 && count.torpedo >= 0) {\n                                            result.type = '连击';\n                                            result.damage = Math.floor(result.damage * 1.2);\n                                            result.hit = 2;\n                                        }\n\n                                        // 通常攻击\n                                        else {\n                                                result.type = '通常';\n                                                result.damage = Math.floor(result.damage);\n                                                result.hit = 1;\n                                            }\n                }\n\n        var jointSymbol = ' ';\n        if (result.isMax) jointSymbol = ' ≤ ';\n        if (result.isMin) jointSymbol = ' ≥ ';\n        result.value = '' + result.type + jointSymbol + result.damage;\n        if (result.hit && result.hit > 1) result.value += ' x ' + result.hit;\n        if (Array.isArray(result.cis) && result.cis.length) {\n            result.value += ' (CI' + jointSymbol + result.cis.sort(function (a, b) {\n                return a[0] - b[0];\n            }).map(function (ci) {\n                return ci[0] + (ci[1] && ci[1] > 1 ? ' x ' + ci[1] : '');\n            }).join(' 或 ') + ')';\n        } else if (result.damage_ci) {\n            var hit = result.hit_ci || result.hit || 1;\n            result.value += ' (CI' + jointSymbol + result.damage_ci + ')';\n            if (hit && hit > 1) result.value += ' x ' + hit;\n        }\n\n        return result;\n    };\n    formula.calcByShip.fighterPower_v2 = function (ship, equipments_by_slot, star_by_slot, rank_by_slot) {\n        var results = [0, 0],\n            slots = _slots(ship.slot);\n\n        slots.map(function (carry, index) {\n            var r = formula.calc.fighterPower(equipments_by_slot[index], carry, rank_by_slot[index] || 0, star_by_slot[index] || 0);\n            results[0] += r[0];\n            results[1] += r[1];\n        });\n        return results;\n    };\n    formula.calcByShip.losPower = function (ship, equipments_by_slot, star_by_slot, rank_by_slot, options) {\n        // http://biikame.hatenablog.com/entry/2014/11/14/224925\n\n        options = options || {};\n        options.shipLv = options.shipLv || 1;\n        options.hqLv = options.hqLv || 1;\n\n        if (options.shipLv < 0) options.shipLv = 1;\n        if (options.hqLv < 0) options.hqLv = 1;\n\n        var x = {\n            'DiveBombers': 0,\n            'TorpedoBombers': 0,\n            'CarrierRecons': 0,\n            'SeaplaneRecons': 0,\n            'SeaplaneBombers': 0,\n            'SmallRadars': 0,\n            'LargeRadars': 0,\n            'Searchlights': 0,\n            'statLos': Math.sqrt(ship.getAttribute('los', options.shipLv)),\n            'hqLv': options.hqLv\n        };\n\n        equipments_by_slot.forEach(function (equipment) {\n            if (equipment) {\n                for (var i in x) {\n                    if (_equipmentType[i] && _equipmentType[i].push && _equipmentType[i].indexOf(equipment.type) > -1) x[i] += equipment.stat.los;\n                }\n            }\n        });\n\n        return formula.calc.losPower(x);\n    };\n    formula.calcByShip.TP = function (ship, equipments_by_slot) {\n        if (!ship || !equipments_by_slot || !equipments_by_slot.push) return 0;\n\n        ship = _ship(ship);\n        var count = {\n            ship: {},\n            equipment: {}\n        };\n        count.ship[ship.type] = 1;\n        equipments_by_slot.forEach(function (equipment) {\n            if (equipment) {\n                var id = typeof equipment == 'number' ? equipment : _equipment(equipment)['id'];\n                if (!count.equipment[id]) count.equipment[id] = 0;\n                count.equipment[id]++;\n            }\n        });\n\n        var count_as_landing_craft = ship.getCapability('count_as_landing_craft');\n        // console.log('count_as_landing_craft', count_as_landing_craft)\n        if (count_as_landing_craft) {\n            if (!count.equipment[68]) count.equipment[68] = 0;\n            count.equipment[68]++;\n        }\n\n        return formula.calc.TP(count);\n    };\n    formula.calcByShip.speed = function (ship, equipments_by_slot, star_by_slot, rank_by_slot, options) {\n        if (!ship) return '';\n        if ((typeof star_by_slot === 'undefined' ? 'undefined' : _typeof(star_by_slot)) === 'object' && star_by_slot.push) return formula.calcByShip.speed(ship, equipments_by_slot, [], [], star_by_slot);\n        if ((typeof rank_by_slot === 'undefined' ? 'undefined' : _typeof(rank_by_slot)) === 'object' && rank_by_slot.push) return formula.calcByShip.speed(ship, equipments_by_slot, star_by_slot, [], rank_by_slot);\n\n        ship = _ship(ship);\n        equipments_by_slot = equipments_by_slot || [];\n        options = options || {};\n\n        var result = parseInt(ship.stat.speed);\n        var theResult = function theResult(_theResult) {\n            _theResult = Math.min(20, _theResult || result);\n            if (options.returnNumber) return _theResult;\n            return KC.statSpeed[_theResult];\n        };\n\n        // if (equipments_by_slot[4]) {\n        //     let id = typeof equipment == 'number' ? equipments_by_slot[4] : _equipment(equipments_by_slot[4])['id']\n        //     if( id != 33 )\n        //         return theResult()\n        // } else {\n        //     return theResult()\n        // }\n\n        var count = {\n            '33': 0,\n            '34': 0,\n            '87': 0\n        };\n        var rule = ship._speedRule || 'low-2';\n        var multiper = 0;\n\n        equipments_by_slot.forEach(function (equipment) {\n            if (!equipment) return;\n\n            var id = typeof equipment == 'number' ? equipment : _equipment(equipment)['id'];\n\n            if (typeof count['' + id] !== 'undefined') count['' + id]++;\n        });\n\n        if (!count['33']) return theResult();\n\n        switch (rule) {\n            case 'low-1':\n                // 低速A\n                // \t基础\t\t5\n                // \t最大\t\t20\n                // \t1x + 0y\t\t+5\t\t0.3x\n                // \t2x + 0y\t\t+5\t\t0.3x\n                // \t3x + 0y\t\t+5\t\t0.3x\n                // \t0x + 1y\t\t+5\t\t0.7x\n                // \t1x + 1y\t\t+10\t\t1x\n                // \t2x + 1y\t\t+10\t\t1x\n                // \t3x + 1y\t\t+10\t\t1x\n                // \t0x + 2y\t\t+10\t\t1.4x\n                // \t1x + 2y\t\t+15\t\t1.7x\n                // \t2x + 2y\t\t+15\t\t1.7x\n                // \t3x + 2y\t\t+15\t\t1.7x\n                // \t0x + 3y\t\t+15\t\t2.1x\n                // \t1x + 2y\t\t+15\n                // \t2x + 2y\t\t+15\n                // \t3x + 2y\t\t+15\n                // \tx = 0.3\n                // \ty = 0.7\n                multiper = 0.3 * Math.min(count['34'], 1) + 0.7 * count['87'];\n                break;\n            case 'low-2':\n            case 'high-3':\n                // 低速B\n                // \t基础\t\t5\n                // \t最大\t\t15\n                // \t1x + 0y\t\t+5\t\t0.33x\n                // \t2x + 0y\t\t+5\t\t0.66x\n                // \t3x + 0y\t\t+10\t\t1x\n                // \t0x + 1y\t\t+5\t\t0.5x\n                // \t1x + 1y\t\t+5\t\t0.83x\n                // \t2x + 1y\t\t+10\t\t1.33x\n                // \t0x + 2y\t\t+10\t\t1x\n                // \tx = 0.33\n                // \ty = 0.5\n                // 高速C\n                // \t基础\t\t10\n                // \t最大\t\t20\n                // \t1x + 0y\t\t+5\t\t0.33x\n                // \t2x + 0y\t\t+5\t\t0.66x\n                // \t3x + 0y\t\t+10\t\t1x\n                // \t0x + 1y\t\t+5\t\t0.5x\n                // \t1x + 1y\t\t+5\t\t0.83x\n                // \t2x + 1y\t\t+10\t\t1.33x\n                // \t0x + 2y\t\t+10\t\t1x\n                // \tx = 0.33\n                // \ty = 0.5\n                if (count['34'] || count['87']) multiper = Math.min(1, count['34'] / 3 + 0.5 * count['87']);\n                break;\n            case 'low-3':\n            case 'high-4':\n                // 低速C\n                // \t基础\t\t5\n                // \t最大\t\t10\n                // 高速D\n                // \t基础\t\t10\n                // \t最大\t\t15\n                if (count['34'] || count['87']) result += 5;\n                break;\n            case 'high-1':\n                // 高速A\n                // \t基础\t\t10\n                // \t最大 \t\t20\n                // \t1x + 0y\t\t+5\t\t0.5x\n                // \t1x + 1y\t\t+10\t\t1.5x\n                // \t0x + 1y\t\t+10\t\t1x\n                // \tx = 0.5\n                // \ty = 1\n                multiper = 0.5 * count['34'] + 1 * count['87'];\n                break;\n            case 'high-2':\n                // 高速B\n                // \t基础\t\t10\n                // \t最大 \t\t20\n                // \t1x + 0y\t\t+5\t\t0.5x\n                // \t2x + 0y\t\t+10\t\t1x\n                // \t0x + 1y\t\t+5\t\t0.5x\n                // \t1x + 1y\t\t+10\t\t1x\n                // \t0x + 2y\t\t+10\t\t1x\n                // \tx = 0.5\n                // \ty = 0.5\n                multiper = 0.5 * count['34'] + 0.5 * count['87'];\n                break;\n            case 'low-4':\n                // 低速4\n                // \t基础\t\t5\n                // \t最大 \t\t20\n                // \t1x + 0y\t\t+5\t\t0.5x\n                // \t2x + 0y\t\t+10\t\t1x\n                // \t0x + 1y\t\t+5\t\t0.5x\n                // \t1x + 1y\t\t+10\t\t1x\n                // \t0x + 2y\t\t+10\t\t1x\n                // \tx = 0.5\n                // \ty = 0.5\n                multiper = 0.5;\n                break;\n        }\n\n        // console.log(\n        //     ship, equipments_by_slot,\n        //     count,\n        //     rule,\n        //     multiper\n        // )\n\n        if (multiper > 0 && multiper < 1) result += 5;else if (multiper >= 1 && multiper < 1.5) result += 10;else if (multiper >= 1.5) result += 15;\n\n        return theResult();\n    };\n    formula.calcByShip.fireRange = function (ship, equipments_by_slot) {\n        if (!ship) return '-';\n        equipments_by_slot = equipments_by_slot || [];\n\n        var result = parseInt(ship.stat.range);\n\n        equipments_by_slot.forEach(function (equipment) {\n            if (!equipment) return;\n\n            result = Math.max(result, _equipment(equipment).stat.range || 0);\n        });\n\n        return KC.statRange[result];\n    };\n    // Calculate by Fleet\n    formula.calcByFleet.los33 = function (data, hq) {\n        /* data [\r\n            [\r\n                {number} shipId,\r\n                [ // ship stat\r\n                    {number} shipLv,\r\n                    {number} shipLuck\r\n                ],\r\n                [ // equipment id\r\n                    {number} slot 1 id,\r\n                    {number} slot 2 id,\r\n                    {number} slot 3 id,\r\n                    {number} slot 4 id,\r\n                    {number} slot x id\r\n                ],\r\n                [ // equipment star\r\n                    {number} slot 1 star,\r\n                    {number} slot 2 star,\r\n                    {number} slot 3 star,\r\n                    {number} slot 4 star,\r\n                    {number} slot x star\r\n                ],\r\n                [ // equipment rank\r\n                    {number} slot 1 rank,\r\n                    {number} slot 2 rank,\r\n                    {number} slot 3 rank,\r\n                    {number} slot 4 rank,\r\n                    {number} slot x rank\r\n                ]\r\n            ]\r\n        ]*/\n\n        var equipments = [],\n            ships = [];\n\n        data.forEach(function (dataShip) {\n            if (!Array.isArray(dataShip)) return;\n\n            var shipId = dataShip[0];\n\n            if (shipId) {\n                var equipmentIdPerSlot = dataShip[2];\n                var equipmentStarPerSlot = dataShip[3];\n                var equipmentRankPerSlot = dataShip[4];\n                ships.push({\n                    id: shipId,\n                    lv: dataShip[1][0]\n                });\n                equipmentIdPerSlot.forEach(function (equipmentId, index) {\n                    equipments.push({\n                        id: equipmentId,\n                        star: equipmentStarPerSlot[index],\n                        rank: equipmentRankPerSlot[index]\n                    });\n                });\n            }\n        });\n\n        return formula.calc.los33({\n            hq: hq,\n            equipments: equipments,\n            ships: ships\n        });\n    };\n    // Calculate by Airfield\n    formula.calcByField.fighterPowerAA = function (data) {\n        /*\r\n         * data [\r\n         *      equipment: equipmentId || Equipment,\r\n         *      star: Number,\r\n         *      rank: Number,\r\n         *      [carry]: Number\r\n         * ]\r\n         */\n        var result = [0, 0],\n            reconBonus = 1;\n\n        function getReconBonus(bonus) {\n            reconBonus = Math.max(bonus, reconBonus);\n            return reconBonus;\n        }\n\n        data.forEach(function (d) {\n            var equipment = _equipment(d[0] || d.equipment || d.equipmentId),\n                star = d[1] || d.star || 0,\n                rank = d[2] || d.rank || 0,\n                carry = d[3] || d.carry || 0,\n                _r = formula.calc.fighterPowerAA(equipment, carry, rank, star);\n\n            if (!carry) {\n                if (formula.equipmentType.Recons.indexOf(equipment.type) > -1) carry = 4;else carry = 18;\n            }\n            result[0] += _r[0];\n            result[1] += _r[1];\n\n            // 计算侦察机加成\n            switch (equipment.type) {\n                case _equipmentType.CarrierRecon:\n                case _equipmentType.CarrierRecon2:\n                    if (equipment.stat.los <= 7) {\n                        getReconBonus(1.2);\n                    } else if (equipment.stat.los >= 9) {\n                        getReconBonus(1.3);\n                    } else {\n                        getReconBonus(1.25);\n                    }\n                    break;\n                case _equipmentType.ReconSeaplane:\n                case _equipmentType.ReconSeaplaneNight:\n                case _equipmentType.LargeFlyingBoat:\n                    if (equipment.stat.los <= 7) {\n                        getReconBonus(1.1);\n                    } else if (equipment.stat.los >= 9) {\n                        getReconBonus(1.16);\n                    } else {\n                        getReconBonus(1.13);\n                    }\n                    break;\n            }\n        });\n\n        result[0] = result[0] * reconBonus;\n        result[1] = result[1] * reconBonus;\n\n        return result;\n    };\n    // Get bonus for specified ship and equipment(s)\n    formula.getBonus = function (ship, equipments_by_slot, star_by_slot, rank_by_slot, stat) {\n        return calculateBonus(ship, equipments_by_slot, star_by_slot, rank_by_slot, stat);\n    };\n\n    /**\r\n     * ES/JS Functions/Features\r\n     */\n    // Array.prototype.indexOf()\n    // Production steps of ECMA-262, Edition 5, 15.4.4.14\n    // Reference: http://es5.github.io/#x15.4.4.14\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (searchElement, fromIndex) {\n\n            var k;\n\n            // 1. Let o be the result of calling ToObject passing\n            //    the this value as the argument.\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let lenValue be the result of calling the Get\n            //    internal method of o with the argument \"length\".\n            // 3. Let len be ToUint32(lenValue).\n            var len = o.length >>> 0;\n\n            // 4. If len is 0, return -1.\n            if (len === 0) {\n                return -1;\n            }\n\n            // 5. If argument fromIndex was passed let n be\n            //    ToInteger(fromIndex); else let n be 0.\n            var n = +fromIndex || 0;\n\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n\n            // 6. If n >= len, return -1.\n            if (n >= len) {\n                return -1;\n            }\n\n            // 7. If n >= 0, then Let k be n.\n            // 8. Else, n<0, Let k be len - abs(n).\n            //    If k is less than 0, then let k be 0.\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            // 9. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ToString(k).\n                //   This is implicit for LHS operands of the in operator\n                // b. Let kPresent be the result of calling the\n                //    HasProperty internal method of o with argument Pk.\n                //   This step can be combined with c\n                // c. If kPresent is true, then\n                //    i.  Let elementK be the result of calling the Get\n                //        internal method of o with the argument ToString(k).\n                //   ii.  Let same be the result of applying the\n                //        Strict Equality Comparison Algorithm to\n                //        searchElement and elementK.\n                //  iii.  If same is true, return k.\n                if (k in o && o[k] === searchElement) {\n                    return k;\n                }\n                k++;\n            }\n            return -1;\n        };\n    }\n\n    /**\r\n     * \r\n     */\n    KC.Entity = Entity;\n    KC.Equipment = Equipment;\n    KC.Ship = Ship;\n    KC.Consumable = Consumable;\n    KC.formula = formula;\n\n    return KC;\n});\n\n//# sourceURL=webpack:///./src/kckit.js?");

/***/ }),

/***/ "./src/types/equipments.js":
/*!*********************************!*\
  !*** ./src/types/equipments.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\r\n * HA       High Angle\r\n * AAFD     Anti-Air Fire Director\r\n */\n\nvar types = {\n\n    // Type ID\n    SmallCaliber: 1, // 小口径主炮\n    SmallCaliberHigh: 2, // 小口径高角主炮\n    SmallCaliberHA: 2, // 小口径高角主炮\n    SmallCaliberAA: 3, // 小口径高角主炮（强化）\n    SmallCaliberAAFD: 3, // 小口径高角主炮（强化）\n    MediumCaliber: 4, // 中口径主炮\n    LargeCaliber: 5, // 大口径主炮\n    SuperCaliber: 6, // 超大口径主炮\n    SecondaryGun: 7, // 副炮\n    SecondaryGunHigh: 8, // 高角副炮\n    SecondaryGunHA: 8, // 高角副炮\n    SecondaryGunAA: 9, // 高角副炮（强化）\n    SecondaryGunAAFD: 9, // 高角副炮（强化）\n    Type3Shell: 10, // 对空强化弹\n    APShell: 11, // 穿甲弹\n    Torpedo: 12, // 鱼雷\n    SubmarineTorpedo: 13, // 潜艇鱼雷\n    MidgetSubmarine: 14, // 微型潜艇\n    ReconSeaplane: 15, // 水上侦察机\n    ReconSeaplaneNight: 16, // 夜侦\n    SeaplaneBomber: 17, // 水上轰炸机\n    CarrierFighter: 18, // 舰战 / 舰载战斗机\n    TorpedoBomber: 19, // 舰攻 / 舰载鱼雷轰炸机\n    DiveBomber: 20, // 舰爆 / 舰载俯冲轰炸机\n    CarrierRecon: 21, // 舰侦 / 舰载侦察机\n    Autogyro: 22, // 旋翼机\n    AntiSubPatrol: 23, // 对潜哨戒机\n    SmallRadar: 24, // 小型雷达\n    LargeRadar: 25, // 大型雷达\n    DepthCharge: 26, // 爆雷\n    Sonar: 27, // 声纳\n    LargeSonar: 28, // 大型声纳\n    AAGun: 29, // 对空机枪\n    AAGunConcentrated: 30, // 对空机枪（强化）\n    AAGunCD: 30, // 对空机枪（强化）\n    CDMG: 30, // 对空机枪（强化）\n    AAFireDirector: 31, // 高射装置\n    AAFD: 31, // 高射装置\n    AviationPersonnel: 36, // 航空作战整备员\n    SurfaceShipPersonnel: 37, // 水上舰要员\n    LandingCraft: 38, // 登陆艇\n    Searchlight: 39, // 探照灯\n    SupplyContainer: 41, // 簡易輸送部材\n    CommandFacility: 45, // 舰队司令部设施\n    LargeFlyingBoat: 45, // 大型水上飞艇\n    SearchlightLarge: 46, // 大型探照灯\n    SuparRadar: 47, // 超大型雷达\n    CombatRation: 48, // 戦闘糧食\n    CarrierRecon2: 50, // 舰侦II / 舰载侦察机II\n    SeaplaneFighter: 51, // 水战 / 水上战斗机\n    AmphibiousCraft: 52, // 特型内火艇\n    LandBasedAttacker: 53, // 陆攻 / 陆上攻击机\n    Interceptor: 54, // 局战 / 局地战斗机\n    JetBomberFighter: 55, // 喷气式战斗轰炸机\n    JetBomberFighter2: 56, // 喷气式战斗轰炸机\n    TransportMaterial: 57, // 运输设备\n    SubmarineEquipment: 58, // 潜艇装备\n    LandBasedFighter: 59, // 陆战 / 陆上战斗机\n    CarrierFighterNight: 60, // 夜战 / 舰载战斗机（夜间）\n    TorpedoBomberNight: 61, // 夜攻 / 舰载鱼雷机（夜间）\n    LandBasedAntiSubPatrol: 62 // 陆上哨戒机\n\n\n    // Groups\n};types.MainGuns = [types.SmallCaliber, types.SmallCaliberHigh, types.SmallCaliberAA, types.MediumCaliber, types.LargeCaliber, types.SuperCaliber];\ntypes.MainCalibers = types.MainGuns;\n\ntypes.SmallCalibers = [types.SmallCaliber, types.SmallCaliberHigh, types.SmallCaliberAA];\n\ntypes.MediumCalibers = [types.MediumCaliber];\n\ntypes.LargeCalibers = [types.LargeCaliber, types.SuperCaliber];\n\ntypes.SecondaryGuns = [types.SecondaryGun, types.SecondaryGunHigh, types.SecondaryGunAA];\n\ntypes.HAMounts = [types.SmallCaliberHigh, types.SmallCaliberAA, types.SecondaryGunHigh, types.SecondaryGunAA];\n\ntypes.HAMountsAAFD = [types.SmallCaliberAA, types.SecondaryGunAA];\n\ntypes.APShells = [types.APShell];\n\ntypes.Torpedos = [types.Torpedo, types.SubmarineTorpedo];\n\ntypes.Seaplanes = [types.ReconSeaplane, types.ReconSeaplaneNight, types.SeaplaneBomber, types.SeaplaneFighter];\n\ntypes.Fighters = [types.SeaplaneBomber, types.CarrierFighter, types.CarrierFighterNight, types.TorpedoBomber, types.TorpedoBomberNight, types.DiveBomber, types.SeaplaneFighter, types.LandBasedAttacker, types.Interceptor,\n// types.CarrierRecon\ntypes.JetBomberFighter, types.JetBomberFighter2, types.LandBasedFighter];\n\ntypes.Interceptors = [types.Interceptor, types.LandBasedFighter];\n\ntypes.Recons = [types.ReconSeaplane, types.ReconSeaplaneNight, types.CarrierRecon, types.CarrierRecon2, types.LargeFlyingBoat];\n\ntypes.SeaplaneRecons = [types.ReconSeaplane, types.ReconSeaplaneNight];\n\ntypes.SeaplaneReconsAll = [types.ReconSeaplane, types.ReconSeaplaneNight, types.LargeFlyingBoat];\n\ntypes.SeaplaneBombers = [types.SeaplaneBomber, types.SeaplaneFighter];\n\ntypes.SeaplaneFighters = [types.SeaplaneFighter];\n\ntypes.CarrierFighters = [types.CarrierFighter, types.CarrierFighterNight];\n\ntypes.CarrierRecons = [types.CarrierRecon, types.CarrierRecon2];\n\ntypes.CarrierBased = [types.CarrierFighter, types.CarrierFighterNight, types.TorpedoBomber, types.TorpedoBomberNight, types.DiveBomber, types.CarrierRecon, types.CarrierRecon2, types.JetBomberFighter, types.JetBomberFighter2];\n\ntypes.LandBased = [types.LandBasedAttacker, types.Interceptor, types.JetBomberFighter, types.JetBomberFighter2, types.LandBasedFighter, types.LandBasedAntiSubPatrol];\n\ntypes.TorpedoBombers = [types.TorpedoBomber, types.TorpedoBomberNight];\n\ntypes.DiveBombers = [types.DiveBomber];\n\ntypes.JetBomberFighters = [types.JetBomberFighter, types.JetBomberFighter2];\n\ntypes.Jets = [types.JetBomberFighter, types.JetBomberFighter2];\n\ntypes.Autogyros = [types.Autogyro];\n\ntypes.AntiSubPatrols = [types.AntiSubPatrol, types.LandBasedAntiSubPatrol];\n\ntypes.Aircrafts = [];\n[].concat(types.Seaplanes).concat(types.Recons).concat(types.CarrierBased).concat(types.Autogyros).concat(types.AntiSubPatrols).concat(types.LandBased).forEach(function (v) {\n    if (types.Aircrafts.indexOf(v) < 0) types.Aircrafts.push(v);\n});\n\ntypes.Radars = [types.SmallRadar, types.LargeRadar, types.SuparRadar];\n\ntypes.SmallRadars = [types.SmallRadar];\n\ntypes.LargeRadars = [types.LargeRadar, types.SuparRadar];\n\ntypes.AntiSubmarines = [types.DepthCharge, types.Sonar, types.LargeSonar];\n\ntypes.DepthCharges = [types.DepthCharge];\n\ntypes.Sonars = [types.Sonar, types.LargeSonar];\n\ntypes.AAGuns = [types.AAGun, types.AAGunConcentrated];\n\ntypes.AAFireDirectors = [types.AAFireDirector];\ntypes.AAFDs = types.AAFireDirectors;\n\ntypes.Searchlights = [types.Searchlight, types.SearchlightLarge];\n\ntypes.AviationPersonnels = [types.AviationPersonnel];\n\ntypes.SurfaceShipPersonnels = [types.SurfaceShipPersonnel];\n\ntypes.LandingCrafts = [types.LandingCraft, types.AmphibiousCraft];\n\ntypes.AmphibiousCrafts = [types.AmphibiousCraft];\n\ntypes.SupplyContainers = [types.SupplyContainer];\n\ntypes.CombatRations = [types.CombatRation];\n\nmodule.exports = types;\n\n//# sourceURL=webpack:///./src/types/equipments.js?");

/***/ })

/******/ });